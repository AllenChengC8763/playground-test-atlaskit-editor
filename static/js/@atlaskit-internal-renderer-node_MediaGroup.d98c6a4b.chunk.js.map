{"version":3,"sources":["../node_modules/@atlaskit/renderer/react/nodes/mediaGroup.js"],"names":["__webpack_require__","r","__webpack_exports__","tslib__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_atlaskit_media_card__WEBPACK_IMPORTED_MODULE_2__","_atlaskit_media_filmstrip__WEBPACK_IMPORTED_MODULE_3__","MediaGroup","_super","_this","apply","this","arguments","state","animate","offset","handleSize","_a","setState","handleScroll","onMediaClick","cardClickHandler","child","surroundingItems","event","analyticsEvent","surroundings","collectionName","props","collection","list","prototype","render","content","count","children","card","toArray","type","renderSingleFile","renderSingleLink","renderStrip","className","resizeMode","cardDimensions","useInlinePlayer","appearance","cloneFileCard","eventHandlers","media","onClick","undefined","map","mapMediaPropsToIdentifier","filter","identifier","onSize","onScroll","rawChild","id","occurrenceKey","mediaItemType"],"mappings":"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","file":"static/js/@atlaskit-internal-renderer-node_MediaGroup.d98c6a4b.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { defaultImageCardDimensions } from '@atlaskit/media-card';\nimport { FilmstripView } from '@atlaskit/media-filmstrip';\n\nvar MediaGroup =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MediaGroup, _super);\n\n  function MediaGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      animate: false,\n      offset: 0\n    };\n\n    _this.handleSize = function (_a) {\n      var offset = _a.offset;\n      return _this.setState({\n        offset: offset\n      });\n    };\n\n    _this.handleScroll = function (_a) {\n      var animate = _a.animate,\n          offset = _a.offset;\n      return _this.setState({\n        animate: animate,\n        offset: offset\n      });\n    };\n\n    _this.onMediaClick = function (cardClickHandler, child, surroundingItems) {\n      return function (event, analyticsEvent) {\n        var surroundings = {\n          collectionName: child.props.collection,\n          list: surroundingItems\n        };\n        cardClickHandler(event, surroundings, analyticsEvent);\n      };\n    };\n\n    return _this;\n  }\n\n  MediaGroup.prototype.render = function () {\n    var numChildren = React.Children.count(this.props.children);\n    var content;\n\n    if (numChildren === 1) {\n      var card = React.Children.toArray(this.props.children)[0];\n\n      switch (card.props.type) {\n        case 'file':\n          content = this.renderSingleFile(card);\n          break;\n\n        case 'link':\n          content = null;\n          break;\n\n        default:\n          content = this.renderSingleLink(card);\n      }\n    } else {\n      content = this.renderStrip();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"MediaGroup\"\n    }, content);\n  };\n\n  MediaGroup.prototype.renderSingleFile = function (child) {\n    return React.cloneElement(child, {\n      resizeMode: 'stretchy-fit',\n      cardDimensions: defaultImageCardDimensions,\n      useInlinePlayer: false\n    });\n  };\n\n  MediaGroup.prototype.renderSingleLink = function (child) {\n    return React.cloneElement(child, {\n      appearance: 'auto'\n    });\n  };\n\n  MediaGroup.prototype.cloneFileCard = function (child, surroundingItems) {\n    var cardClickHandler = this.props && this.props.eventHandlers && this.props.eventHandlers.media && this.props.eventHandlers.media.onClick;\n    var onClick = cardClickHandler ? this.onMediaClick(cardClickHandler, child, surroundingItems) : undefined;\n    return React.cloneElement(child, {\n      useInlinePlayer: false,\n      eventHandlers: tslib_1.__assign({}, child.props.eventHandlers, {\n        media: {\n          onClick: onClick\n        }\n      })\n    });\n  };\n\n  MediaGroup.prototype.renderStrip = function () {\n    var _this = this;\n\n    var children = this.props.children;\n    var _a = this.state,\n        animate = _a.animate,\n        offset = _a.offset;\n    var surroundingItems = React.Children.map(children, function (child) {\n      return _this.mapMediaPropsToIdentifier(child.props);\n    }).filter(function (identifier) {\n      return !!identifier;\n    });\n    return React.createElement(FilmstripView, {\n      animate: animate,\n      offset: offset,\n      onSize: this.handleSize,\n      onScroll: this.handleScroll\n    }, React.Children.map(children, function (rawChild) {\n      var child = rawChild;\n\n      switch (child.props.type) {\n        case 'file':\n          return _this.cloneFileCard(child, surroundingItems);\n\n        case 'link':\n          return null;\n\n        default:\n          return React.cloneElement(child);\n      }\n    }));\n  };\n\n  MediaGroup.prototype.mapMediaPropsToIdentifier = function (_a) {\n    var id = _a.id,\n        type = _a.type,\n        occurrenceKey = _a.occurrenceKey,\n        collection = _a.collection;\n\n    switch (type) {\n      case 'file':\n        return {\n          id: id,\n          mediaItemType: type,\n          occurrenceKey: occurrenceKey,\n          collectionName: collection\n        };\n\n      case 'link':\n        return undefined;\n\n      case 'external':\n        return {\n          id: id,\n          mediaItemType: 'file',\n          occurrenceKey: occurrenceKey,\n          collectionName: collection\n        };\n    }\n  };\n\n  return MediaGroup;\n}(PureComponent);\n\nexport default MediaGroup;"],"sourceRoot":""}