{"version":3,"sources":["../node_modules/@atlaskit/emoji/util/analytics.js","../node_modules/@atlaskit/emoji/types.js","../node_modules/@atlaskit/emoji/components/common/RecordSelectionDefault.js","../node_modules/@atlaskit/icon/glyph/add.js","../node_modules/@atlaskit/emoji/components/common/EmojiButton.js","../node_modules/@atlaskit/emoji/components/common/ToneSelector.js","../node_modules/@atlaskit/emoji/components/common/EmojiPreview.js","../node_modules/@atlaskit/emoji/components/typeahead/styles.js","../node_modules/@atlaskit/emoji/components/common/Scrollable.js","../node_modules/@atlaskit/emoji/components/typeahead/EmojiTypeAheadItem.js","../node_modules/@atlaskit/emoji/components/typeahead/EmojiTypeAheadList.js","../node_modules/@atlaskit/emoji/components/typeahead/EmojiTypeAheadComponent.js"],"names":["__webpack_require__","d","__webpack_exports__","createAndFireEventInElementsChannel","openedPickerEvent","closedPickerEvent","pickerClickedEvent","categoryClickedEvent","pickerSearchedEvent","toneSelectedEvent","toneSelectorOpenedEvent","toneSelectorClosedEvent","uploadBeginButton","uploadConfirmButton","uploadCancelButton","uploadSucceededEvent","uploadFailedEvent","deleteBeginEvent","deleteConfirmEvent","deleteCancelEvent","selectedFileEvent","tslib__WEBPACK_IMPORTED_MODULE_0__","_atlaskit_analytics_next__WEBPACK_IMPORTED_MODULE_1__","_version_json__WEBPACK_IMPORTED_MODULE_2__","Object","createEvent","eventType","action","actionSubject","actionSubjectId","attributes","packageName","packageVersion","emojiPickerEvent","skintoneSelectorEvent","undefined","emojiUploaderEvent","SearchSort","createRecordSelectionDefault","provider","onSelect","emojiId","emoji","event","recordSelection","defineProperty","exports","value","default","_react","_interopRequireDefault","_Icon","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AddIcon","props","createElement","dangerouslySetGlyph","displayName","_default","common_EmojiButton","selectOnHover","classes","styles","react","className","classnames_default","onMouseDown","onSelected","preventDefault","mouse","EmojiButton_handleMouseDown","Emoji","ToneSelector_ToneSelectorInternal","_super","ToneSelectorInternal","_this","onToneSelectedHandler","skinTone","onToneSelected","fireEvent","analytics","skinToneModifier","tslib_es6","createAnalyticsEvent","componentWillMount","render","toneEmojis","skinVariations","ToneSelector_extractAllTones","map","tone","id","common_ToneSelector","withAnalyticsEvents","EmojiPreview_EmojiPreview","EmojiPreview","state","selectingTone","onToneButtonClick","setState","toneValue","onMouseLeave","onToneSelectorCancelled","renderTones","_a","toneEmoji","selectedTone","previewEmoji","renderEmojiPreview","_b","_c","uploadEnabled","previewClasses","previewTextClasses","name","CachingEmoji","shortName","renderAddOwnEmoji","onOpenUpload","index_es","i18n","addCustomEmojiLabel","label","Button","onClick","iconBefore","add_default","a","size","appearance","sectionClasses","styles_a","common_Scrollable","Scrollable","scrollableDiv","reveal","child","forceToTop","childNode","react_dom","scrollableRect","getBoundingClientRect","elementRect","top","scrollTop","bottom","scrollToBottom","scrollHeight","handleScroll","firstElement","document","elementFromPoint","left","onScroll","handleRef","ref","children","maxHeight","scrollableClasses","push","style","typeAheadList","lib_es2015","background","border","shared_styles","borderRadius","boxShadow","color","width","typeAheadEmpty","display","typeAheadItem","cursor","listStyleType","overflow","$nest","backgroundColor","typeAheadItemRow","flexDirection","flexWrap","verticalAlign","emojiTypeAheadSpinnerContainer","position","height","paddingTop","toFixed","boxSizing","emojiTypeAheadSpinner","textAlign","typeahead_EmojiTypeAheadItem","EmojiTypeAheadItem","onEmojiSelected","onSelection","type_helpers","onEmojiMenuItemMouseMove","onMouseMove","selected","ak-emoji-typeahead-item","data-emoji-id","wrapIndex","emojis","index","len","newIndex","getKey","type","getKeyByIndex","typeahead_EmojiTypeAheadList","EmojiTypeAheadList","selectNext","selectedIndex","selectIndex","selectPrevious","chooseCurrentSelection","selectedEmoji","logger","selectIndexOnHover","_emoji","mousePosition","lastMousePosition","selectByEmojiId","itemSelected","handleScrollableRef","scrollable","selectedKey","componentWillReceiveProps","nextProps","selectIndexNewEmoji","componentDidUpdate","revealItem","item","items","callback","renderItems","idx","isSelectedEmoji","_ref","listBody","loading","hasEmoji","ak-emoji-typeahead-list","Spinner","defaultProps","isFullShortName","query","charAt","EmojiTypeAheadComponent_uniqueExactShortNameMatchIndex","searchResult","e_1","matchIndex","toLowerCase","next","done","e_1_1","error","return","EmojiTypeAheadComponent_EmojiTypeAheadComponent","EmojiTypeAheadComponent","emojiListRef","count","onSearchResult","result","wasVisible","visible","RecordSelectionDefault","emojiProvider","onOpen","onClose","onProviderChange","onEmojiListRef","getSelectedTone","getChildContext","componentDidMount","subscribe","onSearch","componentWillUnmount","unsubscribe","prevEmojiProvider","nextEmojiProvider","options","limit","listLimit","constants","replace","sort","types","Default","UsageFrequency","filter","recordUsageOnSelection","childContextTypes","prop_types"],"mappings":"6FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAc,IAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,IAAAjB,EAAAC,EAAAC,EAAA,sBAAAgB,IAAAlB,EAAAC,EAAAC,EAAA,sBAAAiB,IAAAnB,EAAAC,EAAAC,EAAA,sBAAAkB,IAAA,IAAAC,EAAArB,EAAA,GAAAsB,EAAAtB,EAAA,MAAAuB,EAAAvB,EAAA,MAGOG,EAA0CqB,OAAAF,EAAA,EAAAE,CAAkB,mBAEnEC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAKA,YAJA,IAAAA,IACAA,EAAA,IAGA,CACAJ,YACAC,SACAC,gBACAC,kBACAC,WAAgBT,EAAA,SAAgB,CAChCU,YAAmBR,EAAA,EACnBS,eAAsBT,EAAA,GACjBO,KAILG,EAAA,SAAAN,EAAAG,EAAAD,GAKA,YAJA,IAAAC,IACAA,EAAA,IAGAL,EAAA,KAAAE,EAAA,cAAAE,EAAAC,IAGO1B,EAAA,WACP,OAAA6B,EAAA,WAEO5B,EAAA,SAAAyB,GACP,OAAAG,EAAA,SAAAH,IAEOxB,EAAA,SAAAwB,GACP,OAAAG,EAAA,UAAAH,EAAA,UAEOvB,EAAA,SAAAuB,GACP,OAAAG,EAAA,UAAAH,EAAA,aAEOtB,EAAA,SAAAsB,GACP,OAAAG,EAAA,WAAAH,EAAA,UAGAI,EAAA,SAAAP,EAAAG,GAKA,YAJA,IAAAA,IACAA,EAAA,IAGAL,EAAA,KAAAE,EAAA,6BAAAQ,EAAAL,IAGOrB,EAAA,SAAAqB,GACP,OAAAI,EAAA,UAAAJ,IAEOpB,EAAA,SAAAoB,GACP,OAAAI,EAAA,SAAAJ,IAEOnB,EAAA,WACP,OAAAuB,EAAA,cAGAE,EAAA,SAAAT,EAAAE,EAAAC,GACA,OAAAL,EAAA,KAAAE,EAAA,gBAAAE,EAAAC,IAGOlB,EAAA,WACP,OAAAwB,EAAA,wBAEOvB,EAAA,SAAAiB,GACP,OAAAM,EAAA,0BAAAN,IAEOhB,EAAA,WACP,OAAAsB,EAAA,2BAEOrB,EAAA,SAAAe,GACP,OAAAL,EAAA,8CAAAU,EAAAL,IAEOd,EAAA,SAAAc,GACP,OAAAL,EAAA,4CAAAU,EAAAL,IAEOb,EAAA,SAAAa,GACP,OAAAL,EAAA,kDAAAK,IAEOZ,EAAA,SAAAY,GACP,OAAAL,EAAA,kDAAAK,IAEOX,EAAA,SAAAW,GACP,OAAAL,EAAA,iDAAAK,IAEOV,EAAA,WACP,OAAAK,EAAA,iFC7FO,IAAAY,EAAPrC,EAAAC,EAAAC,EAAA,sBAAAmC,IAEA,SAAAA,GAEAA,IAAA,eAEAA,IAAA,qBAEAA,IAAA,mCANA,CAOCA,MAAA,qGCTDrC,EAAAC,EAAAC,EAAA,sBAAAoC,IAOO,IAAAA,EAAA,SAAAC,EAAAC,GACP,gBAAAC,EAAAC,EAAAC,GACA,IACAJ,EAAAK,iBAAAF,GACAH,EAAAK,gBAAAF,GAEK,QACLF,GACAA,EAAAC,EAAAC,EAAAC,yCCbAnB,OAAAqB,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAE,aAAA,EAEA,IAAAC,EAAAC,EAAoClD,EAAQ,IAE5CmD,EAAAD,EAAmClD,EAAQ,KAE3C,SAAAkD,EAAAE,GACA,OAAAA,KAAAC,WAAAD,EAAA,CACAJ,QAAAI,GAIA,SAAAE,IAeA,OAdAA,EAAA9B,OAAA+B,QAAA,SAAAC,GACA,QAAAC,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAG,EAAAF,UAAAD,GAEA,QAAAI,KAAAD,EACApC,OAAAsC,UAAAC,eAAAC,KAAAJ,EAAAC,KACAL,EAAAK,GAAAD,EAAAC,IAKA,OAAAL,IAGAS,MAAAC,KAAAR,WAGA,IAAAS,EAAA,SAAAC,GACA,OAAAnB,EAAAD,QAAAqB,cAAAlB,EAAAH,QAAAM,EAAA,CACAgB,oBAAA,qWACGF,KAGHD,EAAAI,YAAA,UACA,IAAAC,EAAAL,EACArB,EAAAE,QAAAwB,+ICdeC,EAdO,SAAAL,GACtB,IAAA1B,EAAA0B,EAAA1B,MACAgC,EAAAN,EAAAM,cACAC,EAAA,CAAiBC,EAAA,GACjB,OAASC,EAAA,cAAmB,UAC5BC,UAAeC,IAAUJ,GACzBK,YAAA,SAAArC,IAfmB,SAAAyB,EAAAzB,GACnB,IAAAsC,EAAAb,EAAAa,WACAtC,EAAAuC,iBAEAD,GAAoBzD,OAAA2D,EAAA,EAAA3D,CAASmB,IAC7BsC,IAWMG,CAAehB,EAAAzB,KAEhBkC,EAAA,cAAoBQ,EAAA,EAAK,CAC9B3C,QACAgC,gDCXIY,EAEJ,SAAAC,GAGA,SAAAC,IACA,IAAAC,EAAA,OAAAF,KAAAtB,MAAAC,KAAAR,YAAAQ,KAYA,OAVAuB,EAAAC,sBAAA,SAAAC,IAEAC,EADAH,EAAArB,MAAAwB,gBACAD,GAGAF,EAAAI,UAAsBrE,OAAAsE,EAAA,EAAAtE,CAAiB,CACvCuE,iBAHA,+DAGAJ,OAIAF,EAgCA,OA/CEO,EAAA,UAAiBR,EAAAD,GAkBnBC,EAAA1B,UAAA+B,UAAA,SAAAlD,GACA,IAAAsD,EAAA/B,KAAAE,MAAA6B,qBAEAA,GACMzE,OAAAsE,EAAA,EAAAtE,CAAmCmB,EAAnCnB,CAAmCyE,IAIzCT,EAAA1B,UAAAoC,mBAAA,WACAhC,KAAA2B,UAAmBrE,OAAAsE,EAAA,EAAAtE,CAAuB,MAG1CgE,EAAA1B,UAAAqC,OAAA,WACA,IAAAV,EAAAvB,KAGAkC,EA7CmB,SAAA1D,GACnB,OAAAA,EAAA2D,eACWL,EAAA,SAAgB,CAAAtD,KAAA2D,gBAG3B,CAAA3D,GAwCqB4D,CADrBpC,KAAAE,MAAA1B,OAEA,OAAWmC,EAAA,cAAmB,WAAAuB,EAAAG,IAAA,SAAAC,EAAA/C,GAC9B,OAAaoB,EAAA,cAAoBJ,EAAW,CAC5CZ,IAAA,GAAA2C,EAAAC,GACAxB,WAAA,WACA,OAAAQ,EAAAC,sBAAAjC,IAEAf,MAAA8D,EACA9B,eAAA,QAKAc,EAhDA,CAiDEX,EAAA,eAIa6B,EADIlF,OAAAmF,EAAA,EAAAnF,GAAsB8D,GCxDrCsB,EAEJ,SAAArB,GAGA,SAAAsB,IACA,IAAApB,EAAA,OAAAF,KAAAtB,MAAAC,KAAAR,YAAAQ,KAmCA,OAjCAuB,EAAAqB,MAAA,CACAC,eAAA,GAGAtB,EAAAuB,kBAAA,WACAvB,EAAAwB,SAAA,CACAF,eAAA,KAIAtB,EAAAG,eAAA,SAAAsB,GACAzB,EAAAwB,SAAA,CACAF,eAAA,IAGAtB,EAAArB,MAAAwB,gBACAH,EAAArB,MAAAwB,eAAAsB,IAIAzB,EAAA0B,aAAA,WACA,IAAAJ,EAAAtB,EAAAqB,MAAAC,cACAK,EAAA3B,EAAArB,MAAAgD,wBAEAL,GAAAK,GACAA,IAGA3B,EAAAwB,SAAA,CACAF,eAAA,KAIAtB,EAuGA,OA7IEO,EAAA,UAAiBa,EAAAtB,GAyCnBsB,EAAA/C,UAAAuD,YAAA,WACA,IAAA5B,EAAAvB,KAEAoD,EAAApD,KAAAE,MACAmD,EAAAD,EAAAC,UACAC,EAAAF,EAAAE,aAEA,IAAAD,EACA,YAGA,GAAArD,KAAA4C,MAAAC,cACA,OAAalC,EAAA,cAAmB,OAChCC,UAAmBF,EAAA,GACVC,EAAA,cAAoB6B,EAAY,CACzChE,MAAA6E,EACA3B,eAAA1B,KAAA0B,kBAIA,IAAA6B,EAAAF,EAMA,OAJAC,GAAAC,EAAApB,iBACAoB,IAAApB,gBAAAmB,GAAA,OAGW3C,EAAA,cAAmB,OAC9BC,UAAiBF,EAAA,GACVC,EAAA,cAAoBJ,EAAW,CACtC/B,MAAA+E,EACAxC,WAAA,WACA,OAAAQ,EAAAuB,qBAEAtC,eAAA,MAIAmC,EAAA/C,UAAA4D,mBAAA,WACA,IAAAJ,EAAAK,EAEAZ,EAAA7C,KAAA4C,MAAAC,cACAa,EAAA1D,KAAAE,MACA1B,EAAAkF,EAAAlF,MACAmF,EAAAD,EAAAC,cAEA,IAAAnF,GAAAqE,GAAAc,EACA,YAGA,IAAAC,EAAyB/C,MAAUuC,EAAA,IAAc1C,EAAA,IAAc,EAAA0C,EAAa1C,EAAA,KAAuBV,KAAAE,MAAAmD,UAAAD,IACnGS,EAA6BhD,MAAU4C,EAAA,IAAc/C,EAAA,IAAkB,EAAA+C,EAAa/C,EAAA,IAAwBlC,EAAAsF,KAAAL,IAC5G,OAAW9C,EAAA,cAAmB,OAC9BC,UAAAgD,GACOjD,EAAA,cAAmB,QAC1BC,UAAiBF,EAAA,GACVC,EAAA,cAAoBoD,EAAA,EAAY,CACvCvF,WACSmC,EAAA,cAAmB,OAC5BC,UAAAiD,GACOlD,EAAA,cAAmB,QAC1BC,UAAiBF,EAAA,GACZlC,EAAAsF,MAAenD,EAAA,cAAmB,QACvCC,UAAiBF,EAAA,GACZlC,EAAAwF,cAILrB,EAAA/C,UAAAqE,kBAAA,WACA,IAAAb,EAAApD,KAAAE,MACAgE,EAAAd,EAAAc,aACAP,EAAAP,EAAAO,cACAd,EAAA7C,KAAA4C,MAAAC,cAEA,OAAAc,GAAAd,EACA,KAGWlC,EAAA,cAAmB,OAC9BC,UAAiBF,EAAA,GACVC,EAAA,cAAoBwD,EAAA,EAAkBrC,EAAA,SAAgB,GAAKsC,EAAA,EAAQC,qBAAA,SAAAC,GAC1E,OAAa3D,EAAA,cAAoB4D,EAAA,EAAQ,CACzCC,QAAAN,EACAO,WAAoB9D,EAAA,cAAoB+D,EAAAC,EAAO,CAC/CL,QACAM,KAAA,UAEAC,WAAA,SACAjE,UAAmBF,EAAA,EAA2B,2BACvC4D,OAIP3B,EAAA/C,UAAAqC,OAAA,WACA,IAAA6C,EAAyBjE,IAAU,CAAEH,EAAA,EAAqBA,EAAA,IAC1D,OAAWC,EAAA,cAAmB,OAC9BC,UAAAkE,EACA7B,aAAAjD,KAAAiD,cACKjD,KAAAiE,oBAAAjE,KAAAwD,qBAAAxD,KAAAmD,gBAGLR,EA9IA,CA+IEhC,EAAA,eAEa3E,EAAA,kDChKX+I,iIC0FWC,EAhFf,SAAA3D,GAGA,SAAA4D,IACA,IAAA1D,EAAA,OAAAF,KAAAtB,MAAAC,KAAAR,YAAAQ,KA8CA,OA5CAuB,EAAA2D,cAAA,KAEA3D,EAAA4D,OAAA,SAAAC,EAAAC,GACA,GAAAD,GAAA7D,EAAA2D,cAAA,CACA,IAAAI,EAAwBhI,OAAAiI,EAAA,YAAAjI,CAAW8H,GAGnCI,EAAAjE,EAAA2D,cAAAO,wBAEAC,EAAAJ,EAAAG,wBAEAJ,GAAAK,EAAAC,IAAAH,EAAAG,IACApE,EAAA2D,cAAAU,WAAAF,EAAAC,IAAAH,EAAAG,IACSD,EAAAG,OAAAL,EAAAK,SACTtE,EAAA2D,cAAAU,WAAAF,EAAAG,OAAAL,EAAAK,UAKAtE,EAAAuE,eAAA,WACAvE,EAAA2D,gBACA3D,EAAA2D,cAAAU,UAAArE,EAAA2D,cAAAa,eAIAxE,EAAAyE,aAAA,SAAAvH,GACA,IACAwH,EAEA,GAAA1E,EAAA2D,cAAA,CACA,IAAAM,EAAAjE,EAAA2D,cAAAO,wBAEAQ,EAAAC,SAAAC,iBAAAX,EAAAY,KANA,GAMAZ,EAAAG,IANA,IASApE,EAAArB,MAAAmG,UAAAJ,GACA1E,EAAArB,MAAAmG,SAAAJ,EAAAxH,IAIA8C,EAAA+E,UAAA,SAAAC,GACAhF,EAAA2D,cAAAqB,GAGAhF,EA2BA,OA5EEO,EAAA,UAAiBmD,EAAA5D,GAoDnB4D,EAAArF,UAAAqC,OAAA,WACA,IAAAmB,EAAApD,KAAAE,MACAsG,EAAApD,EAAAoD,SACA5F,EAAAwC,EAAAxC,UACA6F,EAAArD,EAAAqD,UACAxD,EAAAG,EAAAH,aACAyD,EAAA,oBAAiDhG,EAAA,GAEjDE,GACA8F,EAAAC,KAAA/F,GAGA,IAAAgG,EAAAH,EAAA,CACAA,aACK,GACL,OAAW9F,EAAA,cAAmB,OAC9BC,UAAiBC,IAAU6F,GAC3BzD,eACAoD,SAAArG,KAAAgG,aACAO,IAAAvG,KAAAsG,UACAM,SACKJ,IAGLvB,EA7EA,CA8EEtE,EAAA,iCDjFKkG,EAAoBvJ,OAAAwJ,EAAA,EAAAxJ,CAAK,CAChCyJ,WAAA,QACAC,OAAA,aAAyBC,EAAA,EACzBC,aAAgBD,EAAA,EAChBE,UAAaF,EAAA,EACbG,MAAA,OACAC,MAASJ,EAAA,IAEFK,EAAqBhK,OAAAwJ,EAAA,EAAAxJ,CAAK,CACjCiK,QAAA,SAEOC,EAAoBlK,OAAAwJ,EAAA,EAAAxJ,CAAK,CAChCmK,OAAA,UACAF,QAAA,QACAG,cAAA,OACAC,SAAA,SACAN,MAASJ,EAAA,EACTW,OAAU7C,EAAE,GAAOA,EAAE,8BAAgB,CACrC8C,gBAAqBZ,EAAA,GAChBlC,KAEE+C,EAAuBxK,OAAAwJ,EAAA,EAAAxJ,CAAK,CACnCiK,QAAA,OACAQ,cAAA,MACAC,SAAA,OACAC,cAAA,WAEOC,EAAqC5K,OAAAwJ,EAAA,EAAAxJ,CAAK,CACjD6K,SAAA,WACAC,OAAUnB,EAAA,EAAuB,KACjCoB,aAAgBpB,EAAA,EAAuB,OAAAqB,UAAA,KACvCC,UAAA,eAEOC,EAA4BlL,OAAAwJ,EAAA,EAAAxJ,CAAK,CACxCmL,UAAA,WEyBeC,EAvDf,SAAArH,GAGA,SAAAsH,IACA,IAAApH,EAAA,OAAAF,KAAAtB,MAAAC,KAAAR,YAAAQ,KAwBA,OArBAuB,EAAAqH,gBAAA,SAAAnK,GACA,IAAA2E,EAAA7B,EAAArB,MACA1B,EAAA4E,EAAA5E,MACAqK,EAAAzF,EAAAyF,YAEUvL,OAAA2D,EAAA,EAAA3D,CAASmB,IAAAoK,IACnBpK,EAAAuC,iBACA6H,EAAoBvL,OAAAwL,EAAA,EAAAxL,CAASkB,KAAAC,KAI7B8C,EAAAwH,yBAAA,SAAAtK,GACA,IAAA2E,EAAA7B,EAAArB,MACA1B,EAAA4E,EAAA5E,MACAwK,EAAA5F,EAAA4F,YAEAA,GACAA,EAAoB1L,OAAAwL,EAAA,EAAAxL,CAASkB,KAAAC,IAI7B8C,EAwBA,OAnDEO,EAAA,UAAiB6G,EAAAtH,GA8BnBsH,EAAA/I,UAAAqC,OAAA,WACA,IAAAmB,EAEAK,EAAAzD,KAAAE,MACA+I,EAAAxF,EAAAwF,SACAzK,EAAAiF,EAAAjF,MACAiC,EAAkBI,MAAUuC,EAAA,CAC5B8F,2BAAA,IACU1B,IAAoB,EAAApE,EF9CX,4BE8CuC6F,EAAA7F,IAC1D,OAAWzC,EAAA,cAAmB,OAC9BC,UAAAH,EACAK,YAAAd,KAAA4I,gBACAI,YAAAhJ,KAAA+I,yBACAI,gBAAA3K,EAAAwF,WACOrD,EAAA,cAAmB,OAC1BC,UAAiBkH,GACVnH,EAAA,cAAoBgC,EAAA,EAAY,CACvCnE,aAIAmK,EApDA,CAqDEhI,EAAA,eCnDF,SAAAyI,EAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAF,EAAA5J,OACA+J,EAAAF,EAEAE,EAAA,GAAAD,EAAA,GACAC,GAAAD,EAGA,OAAAC,EAAAD,EAGA,SAAAE,EAAAjL,GACA,OAAAA,EAAA+D,IAAA/D,EAAAwF,UAAA,IAAAxF,EAAAkL,KAGA,SAAAC,EAAAN,EAAAC,GACA,IAAA9K,EAAA6K,KAAAC,GAEA,GAAA9K,EACA,OAAAiL,EAAAjL,GAMA,IA0NeoL,EAxNf,SAAAvI,GAGA,SAAAwI,EAAA3J,GACA,IAAAqB,EAAAF,EAAAvB,KAAAE,KAAAE,IAAAF,KAyDA,OAtDAuB,EAAAuI,WAAA,WACA,IAAAN,EAAAJ,EAAA7H,EAAArB,MAAAmJ,OAAA9H,EAAAqB,MAAAmH,cAAA,GAEAxI,EAAAyI,YAAAR,IAGAjI,EAAA0I,eAAA,WACA,IAAAT,EAAAJ,EAAA7H,EAAArB,MAAAmJ,OAAA9H,EAAAqB,MAAAmH,cAAA,GAEAxI,EAAAyI,YAAAR,IAGAjI,EAAA2I,uBAAA,WACA,IAAA9G,EAAA7B,EAAArB,MACAmJ,EAAAjG,EAAAiG,OACAT,EAAAxF,EAAAwF,gBAEAuB,EAAAd,EADA9H,EAAAqB,MAAAmH,eAEMzM,OAAA8M,EAAA,EAAA9M,CAAK,2CAAA6M,GAEXvB,GACAA,EAAwBtL,OAAAwL,EAAA,EAAAxL,CAAS6M,OAIjC5I,EAAA8I,mBAAA,SAAA9L,EAAA+L,EAAA7L,GAEA,GAAAA,EAAA,CAIA,IAAA8L,EAA0BjN,OAAA2D,EAAA,EAAA3D,CAAamB,GAE7BnB,OAAA2D,EAAA,EAAA3D,CAAeiE,EAAAiJ,kBAAAD,IACzBhJ,EAAAkJ,gBAAAlM,GAGAgD,EAAAiJ,kBAAAD,IAGAhJ,EAAAmJ,aAAA,SAAAnM,GACAgD,EAAAkJ,gBAAAlM,EAAA,WACAgD,EAAA2I,4BAIA3I,EAAAoJ,oBAAA,SAAApE,GACAhF,EAAAqJ,WAAArE,GAGAhF,EAAAqB,MAAA,CACAiI,YAAAlB,EAAAzJ,EAAAmJ,OAAA,GACAU,cAAA,GAEAxI,EAwJA,OApNEO,EAAA,UAAiB+H,EAAAxI,GA+DnBwI,EAAAjK,UAAAkL,0BAAA,SAAAC,GAEA,IAAA1B,EAAA0B,EAAA1B,OACAwB,EAAA7K,KAAA4C,MAAAiI,YAEA,GAAAA,EAAA,CAKA,QAAAtL,EAAA,EAAmBA,EAAA8J,EAAA5J,OAAmBF,IACtC,GAAAsL,IAAAxB,EAAA9J,GAAAgD,GAIA,YAHAvC,KAAA+C,SAAA,CACAgH,cAAAxK,IAOAS,KAAAgL,oBAAA,EAAA3B,KAGAQ,EAAAjK,UAAAqL,mBAAA,WACA,IAAA5B,EAAArJ,KAAAE,MAAAmJ,OACAU,EAAA/J,KAAA4C,MAAAmH,cAEA,GAAAV,KAAAU,GAAA,CACA,IAAAI,EAAAd,EAAAU,GACA/J,KAAAkL,WAAAf,EAAA5H,IAAA4H,EAAAnG,aAKA6F,EAAAjK,UAAAsL,WAAA,SAAAvL,GACA,IAAAwL,EAAAnL,KAAAoL,MAAAzL,GAEAwL,GAAAnL,KAAA4K,YACA5K,KAAA4K,WAAAzF,OAAAgG,IAIAtB,EAAAjK,UAAAoL,oBAAA,SAAA1B,EAAAD,GACArJ,KAAA+C,SAAA,CACAgH,cAAAT,EACAuB,YAAAlB,EAAAN,EAAAC,MAIAO,EAAAjK,UAAAoK,YAAA,SAAAV,EAAA+B,GACA,IAAAhC,EAAArJ,KAAAE,MAAAmJ,OACArJ,KAAA+C,SAAA,CACAgH,cAAAT,EACAuB,YAAAlB,EAAAN,EAAAC,IACK+B,IAGLxB,EAAAjK,UAAA6K,gBAAA,SAAAlM,EAAA8M,GAGA,IAFA,IAAAhC,EAAArJ,KAAAE,MAAAmJ,OAEA9J,EAAA,EAAmBA,EAAA8J,EAAA5J,OAAmBF,IAAA,CAGtC,GAFA8J,EAAA9J,GAEAgD,KAAAhE,EAAAgE,GAEA,YADAvC,KAAAgK,YAAAzK,EAAA8L,GAKA,IAAA9L,EAAA,EAAmBA,EAAA8J,EAAA5J,OAAmBF,IAAA,CAGtC,GAFA8J,EAAA9J,GAEAyE,YAAAzF,EAAAyF,UAEA,YADAhE,KAAAgK,YAAAzK,EAAA8L,KAMAxB,EAAAjK,UAAA0L,YAAA,SAAAjC,GACA,IAAA9H,EAAAvB,KAEA,OAAAqJ,KAAA5J,QACAO,KAAAoL,MAAA,GACazK,EAAA,cAAmB,WAAA0I,EAAAhH,IAAA,SAAA7D,EAAA+M,GAChC,IAAA5L,EAAA8J,EAAAjL,GAeA,OAdmBmC,EAAA,cAAoB+H,EAAS,CAChDlK,QACAmB,MACAsJ,SAAA1H,EAAAiK,gBAAAhN,EAAA+M,GACAvC,YAAAzH,EAAA8I,mBACAxB,YAAAtH,EAAAmJ,aACAnE,IAAA,SAAAkF,GACAA,EACAlK,EAAA6J,MAAAzL,GAAA8L,SAEAlK,EAAA6J,MAAAzL,UAQA,MAGAkK,EAAAjK,UAAA4L,gBAAA,SAAAhN,EAAA8K,GACA,IAAAuB,EAAA7K,KAAA4C,MAAAiI,YACA,OAAAA,MAAArM,EAAA+D,GAAA,IAAA+G,GAGAO,EAAAjK,UAAAqC,OAAA,WACA,IAAAmB,EASAsI,EAPAjI,EAAAzD,KAAAE,MACAmJ,EAAA5F,EAAA4F,OACAsC,EAAAlI,EAAAkI,QACAC,EAAAvC,KAAA5J,OACAgB,EAAkBI,MAAUuC,EAAA,CAC5ByI,2BAAA,IACUhF,IAAoB,EAAAzD,EAAakE,IAAqBsE,IAAAD,EAAAvI,IAehE,OAXAsI,EADAC,EACiBhL,EAAA,cAAmB,OACpCC,UAAmBsH,GACVvH,EAAA,cAAmB,OAC5BC,UAAmB4H,GACV7H,EAAA,cAAoBmL,EAAA,EAAO,CACpClH,KAAA,aAGA5E,KAAAsL,YAAAjC,GAGW1I,EAAA,cAAmB,OAC9BC,UH3OO,kCG4OAD,EAAA,cAAmB,OAC1BC,UAAAH,GACOE,EAAA,cAAoBqE,EAAU,CACrCuB,IAAAvG,KAAA2K,oBACAlE,UAAiBQ,EAAA,EAAuB,MACnCyE,MAGL7B,EAAAkC,aAAA,CACAnD,gBAAA,cAEAiB,EArNA,CAsNElJ,EAAA,eCjPFqL,EAAA,SAAAC,GACA,OAAAA,KAAAxM,OAAA,SAAAwM,EAAAC,OAAA,UAAAD,EAAAC,OAAAD,EAAAxM,OAAA,IAGI0M,EAA8B,SAAAC,EAAAH,GAClC,IAAAI,EAAAjJ,EAEA,GAAA6I,EAAA,CAKA,IAAAK,EADAL,IAAAM,cAEA,IAAAjD,EAAA,EAEA,IACA,QAAA7F,EAAkB3B,EAAA,SAAgBsK,EAAA/C,QAAA3F,EAAAD,EAAA+I,QAAsC9I,EAAA+I,KAAU/I,EAAAD,EAAA+I,OAAA,CAClF,IAAAhO,EAAAkF,EAAA7E,MAEA,GAAAoN,GAAAzN,EAAAwF,UAAAuI,gBAAAN,EAAA,CACA,QAAAhO,IAAAqO,EAGA,OAFAA,EAAAhD,EAMAA,KAEG,MAAAoD,GACHL,EAAA,CACAM,MAAAD,GAEG,QACH,IACAhJ,MAAA+I,OAAArJ,EAAAK,EAAAmJ,SAAAxJ,EAAAtD,KAAA2D,GACK,QACL,GAAA4I,EAAA,MAAAA,EAAAM,OAIA,OAAAL,IAGIO,EAEJ,SAAAxL,GAGA,SAAAyL,EAAA5M,GACA,IAAAqB,EAAAF,EAAAvB,KAAAE,KAAAE,IAAAF,KAiFA,OA/EAuB,EAAAwL,aAAA,KAEAxL,EAAAuI,WAAA,WACAvI,EAAAwL,cACAxL,EAAAwL,aAAAjD,cAIAvI,EAAA0I,eAAA,WACA1I,EAAAwL,cACAxL,EAAAwL,aAAA9C,kBAIA1I,EAAA2I,uBAAA,WACA3I,EAAAwL,cACAxL,EAAAwL,aAAA7C,0BAIA3I,EAAAyL,MAAA,WACA,IAAA3D,EAAA9H,EAAAqB,MAAAyG,OACA,OAAAA,KAAA5J,QAAA,GAGA8B,EAAA0L,eAAA,SAAAC,GACA,IAAA7D,EAAA6D,EAAA7D,OACA4C,EAAAiB,EAAAjB,MACAkB,EAAA5L,EAAAqB,MAAAwK,QACAA,EAAA/D,EAAA5J,OAAA,EASA,GARMnC,OAAA8M,EAAA,EAAA9M,CAAK,mCAAA+L,EAAA5J,OAAA0N,EAAAC,GAEX7L,EAAAwB,SAAA,CACAsG,SACA+D,UACAzB,SAAA,IAGAK,EAAAC,GAAA,CACA,IAAAK,EAAyBH,EAA8Be,EAAAjB,GAEvD,QAAAhO,IAAAqO,EACyBhP,OAAA+P,EAAA,EAAA/P,CAA4BiE,EAAArB,MAAAoN,cAAA/L,EAAArB,MAAA2I,YACrDvK,CAAmBhB,OAAAwL,EAAA,EAAAxL,CAAS4P,EAAA7D,OAAAiD,IAAAY,EAAA7D,OAAAiD,IAI5Ba,IAAAC,IACAA,EACA7L,EAAArB,MAAAqN,QACAhM,EAAArB,MAAAqN,SAGAhM,EAAArB,MAAAsN,SACAjM,EAAArB,MAAAsN,YAMAjM,EAAAkM,iBAAA,CACAP,OAAA3L,EAAA0L,gBAGA1L,EAAAmM,eAAA,SAAAnH,GACAhF,EAAAwL,aAAAxG,GAGAhF,EAAAqB,MAAA,CACAwK,SAAA,EACA/D,OAAA,GACAsC,SAAA,EACArI,aAAApD,EAAAoN,cAAAK,mBAGApM,EAAArB,MAAAqN,QACAhM,EAAArB,MAAAqN,SAGAhM,EAuFA,OA3KEO,EAAA,UAAiBgL,EAAAzL,GAuFnByL,EAAAlN,UAAAgO,gBAAA,WACA,OACApP,MAAA,CACA8O,cAAAtN,KAAAE,MAAAoN,iBAKAR,EAAAlN,UAAAiO,kBAAA,WACA7N,KAAAE,MAAAoN,cACAQ,UAAA9N,KAAAyN,kBACAzN,KAAA+N,SAAA/N,KAAAE,MAAA+L,QAGAa,EAAAlN,UAAAoO,qBAAA,WACAhO,KAAAE,MAAAoN,cACAW,YAAAjO,KAAAyN,mBAGAX,EAAAlN,UAAAkL,0BAAA,SAAAC,GACA,IAAAmD,EAAAlO,KAAAE,MAAAoN,cACAa,EAAApD,EAAAuC,cAEAY,IAAAC,GACAD,EAAAD,YAAAjO,KAAAyN,kBACAU,EAAAL,UAAA9N,KAAAyN,kBACAzN,KAAA+N,SAAAhD,EAAAkB,QACKjM,KAAAE,MAAA+L,QAAAlB,EAAAkB,OACLjM,KAAA+N,SAAAhD,EAAAkB,QAIAa,EAAAlN,UAAAmO,SAAA,SAAA9B,GACA,IAAA7I,EAAApD,KAAAE,MACAoN,EAAAlK,EAAAkK,cAEAc,EAAA,CACAC,MAFAjL,EAAAkL,WAE0BC,EAAA,EAC1B9M,SAAAzB,KAAA4C,MAAAU,cAGA2I,KAAAuC,QAAA,QAAA/O,OAAA,EACA2O,EAAAK,KAAqBC,EAAA,EAAUC,QAG/BP,EAAAK,KAAqBC,EAAA,EAAUE,eAG/BtB,EAAAuB,OAAA5C,EAAAmC,IAGAtB,EAAAlN,UAAAqC,OAAA,WACA,IAAAmB,EAAApD,KAAAE,MACAoN,EAAAlK,EAAAkK,cACAzE,EAAAzF,EAAAyF,YACAiG,EAAiCxR,OAAA+P,EAAA,EAAA/P,CAA4BgQ,EAAAzE,GAC7DpF,EAAAzD,KAAA4C,MACAwK,EAAA3J,EAAA2J,QACA/D,EAAA5F,EAAA4F,OACAsC,EAAAlI,EAAAkI,QACA/E,EAAA,CACAW,QAAA6F,EAAA,gBAEA3M,EAAkBI,IAAU,sBJ7MrB,4BI8MP,OAAWF,EAAA,cAAmB,OAC9BiG,QACAhG,UAAAH,GACOE,EAAA,cAAoBiJ,EAAS,CACpCP,SACAT,gBAAAkG,EACAvI,IAAAvG,KAAA0N,eACA/B,cAIAmB,EAAAiC,kBAAA,CACAvQ,MAAWwQ,EAAA,QAEXlC,EAAAf,aAAA,CACAlD,YAAA,aACA0E,OAAA,aACAC,QAAA,aACAc,UAAeC,EAAA,GAEfzB,EA5KA,CA6KEnM,EAAA,eAEa3E,EAAA","file":"static/js/193.13056f07.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { createAndFireEvent } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion } from '../version.json';\nexport var createAndFireEventInElementsChannel = createAndFireEvent('fabric-elements');\n\nvar createEvent = function createEvent(eventType, action, actionSubject, actionSubjectId, attributes) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  return {\n    eventType: eventType,\n    action: action,\n    actionSubject: actionSubject,\n    actionSubjectId: actionSubjectId,\n    attributes: tslib_1.__assign({\n      packageName: packageName,\n      packageVersion: packageVersion\n    }, attributes)\n  };\n};\n\nvar emojiPickerEvent = function emojiPickerEvent(action, attributes, actionSubjectId) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  return createEvent('ui', action, 'emojiPicker', actionSubjectId, attributes);\n};\n\nexport var openedPickerEvent = function openedPickerEvent() {\n  return emojiPickerEvent('opened');\n};\nexport var closedPickerEvent = function closedPickerEvent(attributes) {\n  return emojiPickerEvent('closed', attributes);\n};\nexport var pickerClickedEvent = function pickerClickedEvent(attributes) {\n  return emojiPickerEvent('clicked', attributes, 'emoji');\n};\nexport var categoryClickedEvent = function categoryClickedEvent(attributes) {\n  return emojiPickerEvent('clicked', attributes, 'category');\n};\nexport var pickerSearchedEvent = function pickerSearchedEvent(attributes) {\n  return emojiPickerEvent('searched', attributes, 'query');\n};\n\nvar skintoneSelectorEvent = function skintoneSelectorEvent(action, attributes) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  return createEvent('ui', action, 'emojiSkintoneSelector', undefined, attributes);\n};\n\nexport var toneSelectedEvent = function toneSelectedEvent(attributes) {\n  return skintoneSelectorEvent('clicked', attributes);\n};\nexport var toneSelectorOpenedEvent = function toneSelectorOpenedEvent(attributes) {\n  return skintoneSelectorEvent('opened', attributes);\n};\nexport var toneSelectorClosedEvent = function toneSelectorClosedEvent() {\n  return skintoneSelectorEvent('cancelled');\n};\n\nvar emojiUploaderEvent = function emojiUploaderEvent(action, actionSubjectId, attributes) {\n  return createEvent('ui', action, 'emojiUploader', actionSubjectId, attributes);\n};\n\nexport var uploadBeginButton = function uploadBeginButton() {\n  return emojiUploaderEvent('clicked', 'addButton');\n};\nexport var uploadConfirmButton = function uploadConfirmButton(attributes) {\n  return emojiUploaderEvent('clicked', 'confirmButton', attributes);\n};\nexport var uploadCancelButton = function uploadCancelButton() {\n  return emojiUploaderEvent('clicked', 'cancelButton');\n};\nexport var uploadSucceededEvent = function uploadSucceededEvent(attributes) {\n  return createEvent('operational', 'finished', 'emojiUploader', undefined, attributes);\n};\nexport var uploadFailedEvent = function uploadFailedEvent(attributes) {\n  return createEvent('operational', 'failed', 'emojiUploader', undefined, attributes);\n};\nexport var deleteBeginEvent = function deleteBeginEvent(attributes) {\n  return createEvent('ui', 'clicked', 'emojiPicker', 'deleteEmojiTrigger', attributes);\n};\nexport var deleteConfirmEvent = function deleteConfirmEvent(attributes) {\n  return createEvent('ui', 'clicked', 'emojiPicker', 'deleteEmojiConfirm', attributes);\n};\nexport var deleteCancelEvent = function deleteCancelEvent(attributes) {\n  return createEvent('ui', 'clicked', 'emojiPicker', 'deleteEmojiCancel', attributes);\n};\nexport var selectedFileEvent = function selectedFileEvent() {\n  return createEvent('ui', 'clicked', 'emojiUploader', 'selectFile');\n};","export var SearchSort;\n\n(function (SearchSort) {\n  // no sort - just the default ordering of emoji\n  SearchSort[SearchSort[\"None\"] = 0] = \"None\"; // a sort taking into account a number of factors including, usage, closeness of match to the query, etc\n\n  SearchSort[SearchSort[\"Default\"] = 1] = \"Default\"; // sort such that the most frequently used emoji come first, and then standard, service defined ordering is preserved.\n\n  SearchSort[SearchSort[\"UsageFrequency\"] = 2] = \"UsageFrequency\";\n})(SearchSort || (SearchSort = {}));","/**\n * A function that will wrap any configured Emoji 'onSelection' function to ensure recordSelection is always\n * called.\n *\n * @param provider the EmojiProvider which will be called on each emoji selection\n * @param onSelect the onSelect function that is explicitly configured on the Emoji component.\n */\nexport var createRecordSelectionDefault = function createRecordSelectionDefault(provider, onSelect) {\n  return function (emojiId, emoji, event) {\n    try {\n      if (provider.recordSelection && emoji) {\n        provider.recordSelection(emoji);\n      }\n    } finally {\n      if (onSelect) {\n        onSelect(emojiId, emoji, event);\n      }\n    }\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Icon = _interopRequireDefault(require(\"../cjs/components/Icon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AddIcon = function AddIcon(props) {\n  return _react.default.createElement(_Icon.default, _extends({\n    dangerouslySetGlyph: \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" role=\\\"presentation\\\"><path d=\\\"M13 11V3.993A.997.997 0 0 0 12 3c-.556 0-1 .445-1 .993V11H3.993A.997.997 0 0 0 3 12c0 .557.445 1 .993 1H11v7.007c0 .548.448.993 1 .993.556 0 1-.445 1-.993V13h7.007A.997.997 0 0 0 21 12c0-.556-.445-1-.993-1H13z\\\" fill=\\\"currentColor\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n  }, props));\n};\n\nAddIcon.displayName = 'AddIcon';\nvar _default = AddIcon;\nexports.default = _default;","import classNames from 'classnames';\nimport * as React from 'react';\nimport * as styles from './styles';\nimport Emoji from './Emoji';\nimport { leftClick } from '../../util/mouse';\n\nvar handleMouseDown = function handleMouseDown(props, event) {\n  var onSelected = props.onSelected;\n  event.preventDefault();\n\n  if (onSelected && leftClick(event)) {\n    onSelected();\n  }\n};\n\nexport var EmojiButton = function EmojiButton(props) {\n  var emoji = props.emoji,\n      selectOnHover = props.selectOnHover;\n  var classes = [styles.emojiButton];\n  return React.createElement(\"button\", {\n    className: classNames(classes),\n    onMouseDown: function onMouseDown(event) {\n      handleMouseDown(props, event);\n    }\n  }, React.createElement(Emoji, {\n    emoji: emoji,\n    selectOnHover: selectOnHover\n  }));\n};\nexport default EmojiButton;","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport EmojiButton from './EmojiButton';\nimport { withAnalyticsEvents } from '@atlaskit/analytics-next';\nimport { createAndFireEventInElementsChannel, toneSelectedEvent, toneSelectorOpenedEvent } from '../../util/analytics';\n\nvar extractAllTones = function extractAllTones(emoji) {\n  if (emoji.skinVariations) {\n    return tslib_1.__spread([emoji], emoji.skinVariations);\n  }\n\n  return [emoji];\n};\n\nvar ToneSelectorInternal =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ToneSelectorInternal, _super);\n\n  function ToneSelectorInternal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onToneSelectedHandler = function (skinTone) {\n      var onToneSelected = _this.props.onToneSelected;\n      onToneSelected(skinTone);\n      var toneList = ['default', 'light', 'mediumLight', 'medium', 'mediumDark', 'dark'];\n\n      _this.fireEvent(toneSelectedEvent({\n        skinToneModifier: toneList[skinTone]\n      }));\n    };\n\n    return _this;\n  }\n\n  ToneSelectorInternal.prototype.fireEvent = function (event) {\n    var createAnalyticsEvent = this.props.createAnalyticsEvent;\n\n    if (createAnalyticsEvent) {\n      createAndFireEventInElementsChannel(event)(createAnalyticsEvent);\n    }\n  };\n\n  ToneSelectorInternal.prototype.componentWillMount = function () {\n    this.fireEvent(toneSelectorOpenedEvent({}));\n  };\n\n  ToneSelectorInternal.prototype.render = function () {\n    var _this = this;\n\n    var emoji = this.props.emoji;\n    var toneEmojis = extractAllTones(emoji);\n    return React.createElement(\"div\", null, toneEmojis.map(function (tone, i) {\n      return React.createElement(EmojiButton, {\n        key: \"\" + tone.id,\n        onSelected: function onSelected() {\n          return _this.onToneSelectedHandler(i);\n        },\n        emoji: tone,\n        selectOnHover: true\n      });\n    }));\n  };\n\n  return ToneSelectorInternal;\n}(PureComponent);\n\nexport { ToneSelectorInternal };\nvar ToneSelector = withAnalyticsEvents()(ToneSelectorInternal);\nexport default ToneSelector;","import * as tslib_1 from \"tslib\";\nimport AkButton from '@atlaskit/button';\nimport AddIcon from '@atlaskit/icon/glyph/add';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CachingEmoji from '../../components/common/CachingEmoji';\nimport EmojiButton from '../../components/common/EmojiButton';\nimport { messages } from '../i18n';\nimport * as styles from './styles';\nimport ToneSelector from './ToneSelector';\n\nvar EmojiPreview =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiPreview, _super);\n\n  function EmojiPreview() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      selectingTone: false\n    };\n\n    _this.onToneButtonClick = function () {\n      _this.setState({\n        selectingTone: true\n      });\n    };\n\n    _this.onToneSelected = function (toneValue) {\n      _this.setState({\n        selectingTone: false\n      });\n\n      if (_this.props.onToneSelected) {\n        _this.props.onToneSelected(toneValue);\n      }\n    };\n\n    _this.onMouseLeave = function () {\n      var selectingTone = _this.state.selectingTone;\n      var onToneSelectorCancelled = _this.props.onToneSelectorCancelled;\n\n      if (selectingTone && onToneSelectorCancelled) {\n        onToneSelectorCancelled();\n      }\n\n      _this.setState({\n        selectingTone: false\n      });\n    };\n\n    return _this;\n  }\n\n  EmojiPreview.prototype.renderTones = function () {\n    var _this = this;\n\n    var _a = this.props,\n        toneEmoji = _a.toneEmoji,\n        selectedTone = _a.selectedTone;\n\n    if (!toneEmoji) {\n      return null;\n    }\n\n    if (this.state.selectingTone) {\n      return React.createElement(\"div\", {\n        className: styles.toneSelectorContainer\n      }, React.createElement(ToneSelector, {\n        emoji: toneEmoji,\n        onToneSelected: this.onToneSelected\n      }));\n    }\n\n    var previewEmoji = toneEmoji;\n\n    if (selectedTone && previewEmoji.skinVariations) {\n      previewEmoji = previewEmoji.skinVariations[(selectedTone || 1) - 1];\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.buttons\n    }, React.createElement(EmojiButton, {\n      emoji: previewEmoji,\n      onSelected: function onSelected() {\n        return _this.onToneButtonClick();\n      },\n      selectOnHover: true\n    }));\n  };\n\n  EmojiPreview.prototype.renderEmojiPreview = function () {\n    var _a, _b;\n\n    var selectingTone = this.state.selectingTone;\n    var _c = this.props,\n        emoji = _c.emoji,\n        uploadEnabled = _c.uploadEnabled;\n\n    if (!emoji || selectingTone || uploadEnabled) {\n      return null;\n    }\n\n    var previewClasses = classNames((_a = {}, _a[styles.preview] = true, _a[styles.withToneSelector] = !!this.props.toneEmoji, _a));\n    var previewTextClasses = classNames((_b = {}, _b[styles.previewText] = true, _b[styles.previewSingleLine] = !emoji.name, _b));\n    return React.createElement(\"div\", {\n      className: previewClasses\n    }, React.createElement(\"span\", {\n      className: styles.previewImg\n    }, React.createElement(CachingEmoji, {\n      emoji: emoji\n    })), React.createElement(\"div\", {\n      className: previewTextClasses\n    }, React.createElement(\"span\", {\n      className: styles.name\n    }, emoji.name), React.createElement(\"span\", {\n      className: styles.shortName\n    }, emoji.shortName)));\n  }; // note: emoji-picker-add-emoji className is used by pollinator synthetic checks\n\n\n  EmojiPreview.prototype.renderAddOwnEmoji = function () {\n    var _a = this.props,\n        onOpenUpload = _a.onOpenUpload,\n        uploadEnabled = _a.uploadEnabled;\n    var selectingTone = this.state.selectingTone;\n\n    if (!uploadEnabled || selectingTone) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.AddCustomEmoji\n    }, React.createElement(FormattedMessage, tslib_1.__assign({}, messages.addCustomEmojiLabel), function (label) {\n      return React.createElement(AkButton, {\n        onClick: onOpenUpload,\n        iconBefore: React.createElement(AddIcon, {\n          label: label,\n          size: \"small\"\n        }),\n        appearance: \"subtle\",\n        className: styles.addCustomEmojiButton + ' emoji-picker-add-emoji'\n      }, label);\n    }));\n  };\n\n  EmojiPreview.prototype.render = function () {\n    var sectionClasses = classNames([styles.emojiPreview, styles.emojiPreviewSection]);\n    return React.createElement(\"div\", {\n      className: sectionClasses,\n      onMouseLeave: this.onMouseLeave\n    }, this.renderAddOwnEmoji(), this.renderEmojiPreview(), this.renderTones());\n  };\n\n  return EmojiPreview;\n}(PureComponent);\n\nexport default EmojiPreview;","var _a;\n\nimport { style } from 'typestyle';\nimport { emojiPreviewSelectedColor, emojiTypeAheadMaxHeight, emojiTypeAheadWidth, noDialogContainerBorderColor, noDialogContainerBorderRadius, noDialogContainerBoxShadow } from '../../util/shared-styles';\nexport var selected = 'emoji-typeahead-selected';\nexport var emojiTypeAhead = 'emoji-typeahead-element';\nexport var typeAheadListContainer = 'emoji-typeahead-list-container';\nexport var typeAheadList = style({\n  background: 'white',\n  border: \"1px solid \" + noDialogContainerBorderColor,\n  borderRadius: noDialogContainerBorderRadius,\n  boxShadow: noDialogContainerBoxShadow,\n  color: '#333',\n  width: emojiTypeAheadWidth\n});\nexport var typeAheadEmpty = style({\n  display: 'none'\n});\nexport var typeAheadItem = style({\n  cursor: 'pointer',\n  display: 'block',\n  listStyleType: 'none',\n  overflow: 'hidden',\n  width: emojiTypeAheadWidth,\n  $nest: (_a = {}, _a[\"&.\" + selected] = {\n    backgroundColor: emojiPreviewSelectedColor\n  }, _a)\n});\nexport var typeAheadItemRow = style({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  verticalAlign: 'middle'\n});\nexport var emojiTypeAheadSpinnerContainer = style({\n  position: 'relative',\n  height: emojiTypeAheadMaxHeight + \"px\",\n  paddingTop: ((emojiTypeAheadMaxHeight - 30) / 2).toFixed() + \"px\",\n  boxSizing: 'border-box'\n});\nexport var emojiTypeAheadSpinner = style({\n  textAlign: 'center'\n});","// FIXME - FAB-1732 looking at making a shared component for this\nimport * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as styles from './styles';\n\nvar Scrollable =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Scrollable, _super);\n\n  function Scrollable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.scrollableDiv = null; // API\n\n    _this.reveal = function (child, forceToTop) {\n      if (child && _this.scrollableDiv) {\n        var childNode = findDOMNode(child); // Not using Element.scrollIntoView as it scrolls even to top/bottom of view even if\n        // already visible\n\n        var scrollableRect = _this.scrollableDiv.getBoundingClientRect();\n\n        var elementRect = childNode.getBoundingClientRect();\n\n        if (forceToTop || elementRect.top < scrollableRect.top) {\n          _this.scrollableDiv.scrollTop += elementRect.top - scrollableRect.top;\n        } else if (elementRect.bottom > scrollableRect.bottom) {\n          _this.scrollableDiv.scrollTop += elementRect.bottom - scrollableRect.bottom;\n        }\n      }\n    };\n\n    _this.scrollToBottom = function () {\n      if (_this.scrollableDiv) {\n        _this.scrollableDiv.scrollTop = _this.scrollableDiv.scrollHeight;\n      }\n    };\n\n    _this.handleScroll = function (event) {\n      var sampleOffset = 10;\n      var firstElement;\n\n      if (_this.scrollableDiv) {\n        var scrollableRect = _this.scrollableDiv.getBoundingClientRect();\n\n        firstElement = document.elementFromPoint(scrollableRect.left + sampleOffset, scrollableRect.top + sampleOffset);\n      }\n\n      if (_this.props.onScroll && firstElement) {\n        _this.props.onScroll(firstElement, event);\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      _this.scrollableDiv = ref;\n    };\n\n    return _this;\n  }\n\n  Scrollable.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        className = _a.className,\n        maxHeight = _a.maxHeight,\n        onMouseLeave = _a.onMouseLeave;\n    var scrollableClasses = ['emoji-scrollable', styles.emojiScrollable];\n\n    if (className) {\n      scrollableClasses.push(className);\n    }\n\n    var style = maxHeight ? {\n      maxHeight: maxHeight\n    } : {};\n    return React.createElement(\"div\", {\n      className: classNames(scrollableClasses),\n      onMouseLeave: onMouseLeave,\n      onScroll: this.handleScroll,\n      ref: this.handleRef,\n      style: style\n    }, children);\n  };\n\n  return Scrollable;\n}(PureComponent);\n\nexport default Scrollable;","import * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { toEmojiId } from '../../util/type-helpers';\nimport { leftClick } from '../../util/mouse';\nimport EmojiPreview from '../common/EmojiPreview';\nimport * as styles from './styles';\n\nvar EmojiTypeAheadItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiTypeAheadItem, _super);\n\n  function EmojiTypeAheadItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // internal, used for callbacks\n\n\n    _this.onEmojiSelected = function (event) {\n      var _a = _this.props,\n          emoji = _a.emoji,\n          onSelection = _a.onSelection;\n\n      if (leftClick(event) && onSelection) {\n        event.preventDefault();\n        onSelection(toEmojiId(emoji), emoji, event);\n      }\n    };\n\n    _this.onEmojiMenuItemMouseMove = function (event) {\n      var _a = _this.props,\n          emoji = _a.emoji,\n          onMouseMove = _a.onMouseMove;\n\n      if (onMouseMove) {\n        onMouseMove(toEmojiId(emoji), emoji, event);\n      }\n    };\n\n    return _this;\n  }\n\n  EmojiTypeAheadItem.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        selected = _b.selected,\n        emoji = _b.emoji;\n    var classes = classNames((_a = {\n      'ak-emoji-typeahead-item': true\n    }, _a[styles.typeAheadItem] = true, _a[styles.selected] = selected, _a));\n    return React.createElement(\"div\", {\n      className: classes,\n      onMouseDown: this.onEmojiSelected,\n      onMouseMove: this.onEmojiMenuItemMouseMove,\n      \"data-emoji-id\": emoji.shortName\n    }, React.createElement(\"div\", {\n      className: styles.typeAheadItemRow\n    }, React.createElement(EmojiPreview, {\n      emoji: emoji\n    })));\n  };\n\n  return EmojiTypeAheadItem;\n}(PureComponent);\n\nexport default EmojiTypeAheadItem;","import * as tslib_1 from \"tslib\";\nimport Spinner from '@atlaskit/spinner';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { emojiTypeAheadMaxHeight } from '../../util/shared-styles';\nimport { toEmojiId } from '../../util/type-helpers';\nimport debug from '../../util/logger';\nimport { actualMouseMove, mouseLocation } from '../../util/mouse';\nimport Scrollable from '../common/Scrollable';\nimport EmojiItem from './EmojiTypeAheadItem';\nimport * as styles from './styles';\n\nfunction wrapIndex(emojis, index) {\n  var len = emojis.length;\n  var newIndex = index;\n\n  while (newIndex < 0 && len > 0) {\n    newIndex += len;\n  }\n\n  return newIndex % len;\n}\n\nfunction getKey(emoji) {\n  return emoji.id || emoji.shortName + \"-\" + emoji.type;\n}\n\nfunction getKeyByIndex(emojis, index) {\n  var emoji = emojis && emojis[index];\n\n  if (emoji) {\n    return getKey(emoji);\n  }\n\n  return undefined;\n}\n\nvar EmojiTypeAheadList =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiTypeAheadList, _super);\n\n  function EmojiTypeAheadList(props) {\n    var _this = _super.call(this, props) || this; // API\n\n\n    _this.selectNext = function () {\n      var newIndex = wrapIndex(_this.props.emojis, _this.state.selectedIndex + 1);\n\n      _this.selectIndex(newIndex);\n    };\n\n    _this.selectPrevious = function () {\n      var newIndex = wrapIndex(_this.props.emojis, _this.state.selectedIndex - 1);\n\n      _this.selectIndex(newIndex);\n    };\n\n    _this.chooseCurrentSelection = function () {\n      var _a = _this.props,\n          emojis = _a.emojis,\n          onEmojiSelected = _a.onEmojiSelected;\n      var selectedIndex = _this.state.selectedIndex;\n      var selectedEmoji = emojis[selectedIndex];\n      debug('ak-typeahead-list.chooseCurrentSelection', selectedEmoji);\n\n      if (onEmojiSelected) {\n        onEmojiSelected(toEmojiId(selectedEmoji), selectedEmoji);\n      }\n    };\n\n    _this.selectIndexOnHover = function (emojiId, _emoji, event) {\n      // TODO: fix this\n      if (!event) {\n        return;\n      }\n\n      var mousePosition = mouseLocation(event);\n\n      if (actualMouseMove(_this.lastMousePosition, mousePosition)) {\n        _this.selectByEmojiId(emojiId);\n      }\n\n      _this.lastMousePosition = mousePosition;\n    };\n\n    _this.itemSelected = function (emojiId) {\n      _this.selectByEmojiId(emojiId, function () {\n        _this.chooseCurrentSelection();\n      });\n    };\n\n    _this.handleScrollableRef = function (ref) {\n      _this.scrollable = ref;\n    };\n\n    _this.state = {\n      selectedKey: getKeyByIndex(props.emojis, 0),\n      selectedIndex: 0\n    };\n    return _this;\n  }\n\n  EmojiTypeAheadList.prototype.componentWillReceiveProps = function (nextProps) {\n    // adjust selection\n    var emojis = nextProps.emojis;\n    var selectedKey = this.state.selectedKey;\n\n    if (!selectedKey) {\n      // go with default of selecting first item\n      return;\n    }\n\n    for (var i = 0; i < emojis.length; i++) {\n      if (selectedKey === emojis[i].id) {\n        this.setState({\n          selectedIndex: i\n        });\n        return;\n      }\n    } // existing selection not in results, pick first\n\n\n    this.selectIndexNewEmoji(0, emojis);\n  };\n\n  EmojiTypeAheadList.prototype.componentDidUpdate = function () {\n    var emojis = this.props.emojis;\n    var selectedIndex = this.state.selectedIndex;\n\n    if (emojis && emojis[selectedIndex]) {\n      var selectedEmoji = emojis[selectedIndex];\n      this.revealItem(selectedEmoji.id || selectedEmoji.shortName);\n    }\n  }; // Internal\n\n\n  EmojiTypeAheadList.prototype.revealItem = function (key) {\n    var item = this.items[key];\n\n    if (item && this.scrollable) {\n      this.scrollable.reveal(item);\n    }\n  };\n\n  EmojiTypeAheadList.prototype.selectIndexNewEmoji = function (index, emojis) {\n    this.setState({\n      selectedIndex: index,\n      selectedKey: getKeyByIndex(emojis, index)\n    });\n  };\n\n  EmojiTypeAheadList.prototype.selectIndex = function (index, callback) {\n    var emojis = this.props.emojis;\n    this.setState({\n      selectedIndex: index,\n      selectedKey: getKeyByIndex(emojis, index)\n    }, callback);\n  };\n\n  EmojiTypeAheadList.prototype.selectByEmojiId = function (emojiId, callback) {\n    var emojis = this.props.emojis;\n\n    for (var i = 0; i < emojis.length; i++) {\n      var emoji = emojis[i];\n\n      if (emoji.id === emojiId.id) {\n        this.selectIndex(i, callback);\n        return;\n      }\n    }\n\n    for (var i = 0; i < emojis.length; i++) {\n      var emoji = emojis[i];\n\n      if (emoji.shortName === emojiId.shortName) {\n        this.selectIndex(i, callback);\n        return;\n      }\n    }\n  };\n\n  EmojiTypeAheadList.prototype.renderItems = function (emojis) {\n    var _this = this;\n\n    if (emojis && emojis.length) {\n      this.items = {};\n      return React.createElement(\"div\", null, emojis.map(function (emoji, idx) {\n        var key = getKey(emoji);\n        var item = React.createElement(EmojiItem, {\n          emoji: emoji,\n          key: key,\n          selected: _this.isSelectedEmoji(emoji, idx),\n          onMouseMove: _this.selectIndexOnHover,\n          onSelection: _this.itemSelected,\n          ref: function ref(_ref) {\n            if (_ref) {\n              _this.items[key] = _ref;\n            } else {\n              delete _this.items[key];\n            }\n          }\n        });\n        return item;\n      }));\n    }\n\n    return null;\n  };\n\n  EmojiTypeAheadList.prototype.isSelectedEmoji = function (emoji, index) {\n    var selectedKey = this.state.selectedKey;\n    return selectedKey ? selectedKey === emoji.id : index === 0;\n  };\n\n  EmojiTypeAheadList.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        emojis = _b.emojis,\n        loading = _b.loading;\n    var hasEmoji = emojis && emojis.length;\n    var classes = classNames((_a = {\n      'ak-emoji-typeahead-list': true\n    }, _a[styles.typeAheadList] = true, _a[styles.typeAheadEmpty] = !hasEmoji && !loading, _a));\n    var listBody;\n\n    if (loading) {\n      listBody = React.createElement(\"div\", {\n        className: styles.emojiTypeAheadSpinnerContainer\n      }, React.createElement(\"div\", {\n        className: styles.emojiTypeAheadSpinner\n      }, React.createElement(Spinner, {\n        size: \"medium\"\n      })));\n    } else {\n      listBody = this.renderItems(emojis);\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.typeAheadListContainer\n    }, React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(Scrollable, {\n      ref: this.handleScrollableRef,\n      maxHeight: emojiTypeAheadMaxHeight + \"px\"\n    }, listBody)));\n  };\n\n  EmojiTypeAheadList.defaultProps = {\n    onEmojiSelected: function onEmojiSelected() {}\n  };\n  return EmojiTypeAheadList;\n}(PureComponent);\n\nexport default EmojiTypeAheadList;","import * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { defaultListLimit } from '../../util/constants';\nimport { toEmojiId } from '../../util/type-helpers';\nimport { SearchSort } from '../../types';\nimport debug from '../../util/logger';\nimport { createRecordSelectionDefault } from '../common/RecordSelectionDefault';\nimport EmojiList from './EmojiTypeAheadList';\nimport * as styles from './styles';\n\nvar isFullShortName = function isFullShortName(query) {\n  return query && query.length > 1 && query.charAt(0) === ':' && query.charAt(query.length - 1) === ':';\n};\n\nvar uniqueExactShortNameMatchIndex = function uniqueExactShortNameMatchIndex(searchResult, query) {\n  var e_1, _a;\n\n  if (!query) {\n    return undefined;\n  }\n\n  query = query.toLowerCase();\n  var matchIndex;\n  var index = 0;\n\n  try {\n    for (var _b = tslib_1.__values(searchResult.emojis), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var emoji = _c.value;\n\n      if (query && emoji.shortName.toLowerCase() === query) {\n        if (matchIndex === undefined) {\n          matchIndex = index;\n        } else {\n          return;\n        }\n      }\n\n      index++;\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return matchIndex;\n};\n\nvar EmojiTypeAheadComponent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiTypeAheadComponent, _super);\n\n  function EmojiTypeAheadComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.emojiListRef = null;\n\n    _this.selectNext = function () {\n      if (_this.emojiListRef) {\n        _this.emojiListRef.selectNext();\n      }\n    };\n\n    _this.selectPrevious = function () {\n      if (_this.emojiListRef) {\n        _this.emojiListRef.selectPrevious();\n      }\n    };\n\n    _this.chooseCurrentSelection = function () {\n      if (_this.emojiListRef) {\n        _this.emojiListRef.chooseCurrentSelection();\n      }\n    };\n\n    _this.count = function () {\n      var emojis = _this.state.emojis;\n      return emojis && emojis.length || 0;\n    };\n\n    _this.onSearchResult = function (result) {\n      var emojis = result.emojis,\n          query = result.query;\n      var wasVisible = _this.state.visible;\n      var visible = emojis.length > 0;\n      debug('emoji-typeahead.applyPropChanges', emojis.length, wasVisible, visible);\n\n      _this.setState({\n        emojis: emojis,\n        visible: visible,\n        loading: false\n      });\n\n      if (isFullShortName(query)) {\n        var matchIndex = uniqueExactShortNameMatchIndex(result, query);\n\n        if (matchIndex !== undefined) {\n          var onSelect = createRecordSelectionDefault(_this.props.emojiProvider, _this.props.onSelection);\n          onSelect(toEmojiId(result.emojis[matchIndex]), result.emojis[matchIndex]);\n        }\n      }\n\n      if (wasVisible !== visible) {\n        if (visible) {\n          if (_this.props.onOpen) {\n            _this.props.onOpen();\n          }\n        } else {\n          if (_this.props.onClose) {\n            _this.props.onClose();\n          }\n        }\n      }\n    };\n\n    _this.onProviderChange = {\n      result: _this.onSearchResult\n    };\n\n    _this.onEmojiListRef = function (ref) {\n      _this.emojiListRef = ref;\n    };\n\n    _this.state = {\n      visible: true,\n      emojis: [],\n      loading: true,\n      selectedTone: props.emojiProvider.getSelectedTone()\n    };\n\n    if (_this.props.onOpen) {\n      _this.props.onOpen();\n    }\n\n    return _this;\n  }\n\n  EmojiTypeAheadComponent.prototype.getChildContext = function () {\n    return {\n      emoji: {\n        emojiProvider: this.props.emojiProvider\n      }\n    };\n  };\n\n  EmojiTypeAheadComponent.prototype.componentDidMount = function () {\n    var emojiProvider = this.props.emojiProvider;\n    emojiProvider.subscribe(this.onProviderChange);\n    this.onSearch(this.props.query);\n  };\n\n  EmojiTypeAheadComponent.prototype.componentWillUnmount = function () {\n    var emojiProvider = this.props.emojiProvider;\n    emojiProvider.unsubscribe(this.onProviderChange);\n  };\n\n  EmojiTypeAheadComponent.prototype.componentWillReceiveProps = function (nextProps) {\n    var prevEmojiProvider = this.props.emojiProvider;\n    var nextEmojiProvider = nextProps.emojiProvider;\n\n    if (prevEmojiProvider !== nextEmojiProvider) {\n      prevEmojiProvider.unsubscribe(this.onProviderChange);\n      nextEmojiProvider.subscribe(this.onProviderChange);\n      this.onSearch(nextProps.query);\n    } else if (this.props.query !== nextProps.query) {\n      this.onSearch(nextProps.query);\n    }\n  };\n\n  EmojiTypeAheadComponent.prototype.onSearch = function (query) {\n    var _a = this.props,\n        emojiProvider = _a.emojiProvider,\n        listLimit = _a.listLimit;\n    var options = {\n      limit: listLimit || defaultListLimit,\n      skinTone: this.state.selectedTone\n    };\n\n    if (query && query.replace(':', '').length > 0) {\n      options.sort = SearchSort.Default;\n    } else {\n      // if empty query (i.e. typeahead triggered only) then only sort by usage\n      options.sort = SearchSort.UsageFrequency;\n    }\n\n    emojiProvider.filter(query, options);\n  };\n\n  EmojiTypeAheadComponent.prototype.render = function () {\n    var _a = this.props,\n        emojiProvider = _a.emojiProvider,\n        onSelection = _a.onSelection;\n    var recordUsageOnSelection = createRecordSelectionDefault(emojiProvider, onSelection);\n    var _b = this.state,\n        visible = _b.visible,\n        emojis = _b.emojis,\n        loading = _b.loading;\n    var style = {\n      display: visible ? 'block' : 'none'\n    };\n    var classes = classNames(['ak-emoji-typeahead', styles.emojiTypeAhead]);\n    return React.createElement(\"div\", {\n      style: style,\n      className: classes\n    }, React.createElement(EmojiList, {\n      emojis: emojis,\n      onEmojiSelected: recordUsageOnSelection,\n      ref: this.onEmojiListRef,\n      loading: loading\n    }));\n  };\n\n  EmojiTypeAheadComponent.childContextTypes = {\n    emoji: PropTypes.object\n  };\n  EmojiTypeAheadComponent.defaultProps = {\n    onSelection: function onSelection() {},\n    onOpen: function onOpen() {},\n    onClose: function onClose() {},\n    listLimit: defaultListLimit\n  };\n  return EmojiTypeAheadComponent;\n}(PureComponent);\n\nexport default EmojiTypeAheadComponent;"],"sourceRoot":""}