{"version":3,"sources":["../node_modules/@atlaskit/task-decision/styled/DecisionItem.js","../node_modules/@atlaskit/task-decision/components/DecisionItem.js","../node_modules/@atlaskit/renderer/react/nodes/decisionItem.js"],"names":["templateObject_1","EditorIconWrapper","styled_components_browser_esm","span","tslib_es6","props","showPlaceholder","theme","N100","Object","themed","light","G300","dark","G200","constants","components_DecisionItem","_super","DecisionItem","apply","this","arguments","prototype","getAttributionText","_a","creator","user","lastUpdater","displayName","render","appearance","children","contentRef","placeholder","icon","react","decision_default","a","label","size","Item","attribution","defaultProps","__webpack_exports__"],"mappings":"uGASAA,gEANOC,EAAwBC,EAAA,QAAMC,KAAAH,MAA8CI,EAAA,qBAA4B,mEAAuD,oBAAgB,mDAAiE,mEAA4D,oBAAgB,qDAAiE,SAAAC,GACpY,OAAAA,EAAAC,gBAAiCC,EAAA,OAAMC,KAAQC,OAAAC,EAAA,EAAAD,CAAM,CACrDE,MAAWJ,EAAA,OAAMK,KACjBC,KAAUN,EAAA,OAAMO,QAEbC,EAAA,YCkDYC,EAjDf,SAAAC,GAGA,SAAAC,IACA,cAAAD,KAAAE,MAAAC,KAAAC,YAAAD,KA0CA,OA7CEhB,EAAA,UAAiBc,EAAAD,GAMnBC,EAAAI,UAAAC,mBAAA,WACA,IAAAC,EAAAJ,KAAAf,MACAoB,EAAAD,EAAAC,QAEAC,EADAF,EAAAG,aACAF,EAEA,GAAAC,KAAAE,YAIA,qBAAAF,EAAAE,aAGAV,EAAAI,UAAAO,OAAA,WACA,IAAAL,EAAAJ,KAAAf,MACAyB,EAAAN,EAAAM,WACAC,EAAAP,EAAAO,SACAC,EAAAR,EAAAQ,WACAC,EAAAT,EAAAS,YACA3B,EAAAkB,EAAAlB,gBACA4B,EAAeC,EAAA,cAAoBlC,EAAiB,CACpDK,mBACO6B,EAAA,cAAoBC,EAAAC,EAAY,CACvCC,MAAA,WACAC,KAAA,WAEA,OAAWJ,EAAA,cAAoBK,EAAA,EAAI,CACnCV,aACAE,aACAE,OACAD,cACA3B,kBACAmC,YAAArB,KAAAG,sBACKQ,IAGLb,EAAAwB,aAAA,CACAZ,WAAA,UAEAZ,EA9CA,CA+CEiB,EAAA,eChDaQ,EAAA,QALC,SAAAnB,GAChB,IAAAO,EAAAP,EAAAO,SACA,OAASI,EAAA,cAAoBnB,EAAc,KAAAe","file":"static/js/@atlaskit-internal-renderer-node_DecisionItem.b49e7508.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport styled from 'styled-components';\nimport { gridSize, colors, themed } from '@atlaskit/theme';\nexport var EditorIconWrapper = styled.span(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  flex: 0 0 16px;\\n  height: 16px;\\n  width: 16px;\\n  color: \", \";\\n  margin: 2px \", \"px 0 0;\\n\\n  > span {\\n    margin: -8px;\\n  }\\n\"], [\"\\n  flex: 0 0 16px;\\n  height: 16px;\\n  width: 16px;\\n  color: \", \";\\n  margin: 2px \", \"px 0 0;\\n\\n  > span {\\n    margin: -8px;\\n  }\\n\"])), function (props) {\n  return props.showPlaceholder ? colors.N100 : themed({\n    light: colors.G300,\n    dark: colors.G200\n  });\n}, gridSize);\nvar templateObject_1;","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport DecisionIcon from '@atlaskit/icon/glyph/editor/decision';\nimport { EditorIconWrapper } from '../styled/DecisionItem';\nimport Item from './Item';\n\nvar DecisionItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DecisionItem, _super);\n\n  function DecisionItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DecisionItem.prototype.getAttributionText = function () {\n    var _a = this.props,\n        creator = _a.creator,\n        lastUpdater = _a.lastUpdater;\n    var user = lastUpdater || creator;\n\n    if (!user || !user.displayName) {\n      return undefined;\n    }\n\n    return \"Captured by \" + user.displayName;\n  };\n\n  DecisionItem.prototype.render = function () {\n    var _a = this.props,\n        appearance = _a.appearance,\n        children = _a.children,\n        contentRef = _a.contentRef,\n        placeholder = _a.placeholder,\n        showPlaceholder = _a.showPlaceholder;\n    var icon = React.createElement(EditorIconWrapper, {\n      showPlaceholder: showPlaceholder\n    }, React.createElement(DecisionIcon, {\n      label: \"Decision\",\n      size: \"large\"\n    }));\n    return React.createElement(Item, {\n      appearance: appearance,\n      contentRef: contentRef,\n      icon: icon,\n      placeholder: placeholder,\n      showPlaceholder: showPlaceholder,\n      attribution: this.getAttributionText()\n    }, children);\n  };\n\n  DecisionItem.defaultProps = {\n    appearance: 'inline'\n  };\n  return DecisionItem;\n}(PureComponent);\n\nexport default DecisionItem;","import * as React from 'react';\nimport { DecisionItem as AkDecisionItem } from '@atlaskit/task-decision';\n\nvar DecisionItem = function DecisionItem(_a) {\n  var children = _a.children;\n  return React.createElement(AkDecisionItem, null, children);\n};\n\nexport default DecisionItem;"],"sourceRoot":""}