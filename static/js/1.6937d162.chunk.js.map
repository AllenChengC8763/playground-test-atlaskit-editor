{"version":3,"sources":["../node_modules/@atlaskit/media-picker/util/eventEmitter.js","../node_modules/@atlaskit/media-picker/components/component.js","../node_modules/@atlaskit/media-ui/util.js","../node_modules/@atlaskit/media-ui/imageMetaData/types.js","../node_modules/@atlaskit/media-ui/imageMetaData/parseJPEG.js","../node_modules/@atlaskit/media-ui/imageMetaData/parsePNG.js","../node_modules/@atlaskit/media-ui/imageMetaData/metatags.js","../node_modules/@atlaskit/media-ui/imageMetaData/parsePNGXMP.js","../node_modules/@atlaskit/media-ui/imageMetaData/index.js","../node_modules/@atlaskit/media-picker/popup/config.js","../node_modules/@atlaskit/media-ui/imageMetaData/imageOrientationUtil.js","../node_modules/@atlaskit/media-picker/util/getPreviewFromImage.js","../node_modules/@atlaskit/media-picker/service/newUploadServiceImpl.js","../node_modules/@atlaskit/media-picker/util/getPreviewFromBlob.js","../node_modules/@atlaskit/media-picker/components/localUpload.js","../node_modules/eventemitter2/lib/eventemitter2.js","../node_modules/video-snapshot/dist/index.js","../node_modules/@atlaskit/media-picker/popup/domain/source-file.js","../node_modules/@atlaskit/media-picker/domain/progress.js","../node_modules/@atlaskit/media-picker/util/handleError.js","../node_modules/@atlaskit/media-picker/service/types.js","../node_modules/@atlaskit/media-store/upload-controller.js"],"names":["eventEmitter_GenericEventEmitter","GenericEventEmitter","this","emitter","eventemitter2","wildcard","prototype","once","event","listener","on","onAny","addListener","off","removeListener","handler","removeAllListeners","undefined","emit","payload","__webpack_require__","d","__webpack_exports__","component_UploadComponent","_super","UploadComponent","apply","arguments","tslib_es6","emitUploadsStart","files","emitUploadProgress","file","progress","emitUploadPreviewUpdate","preview","emitUploadProcessing","emitUploadEnd","fileDetails","public","emitUploadError","error","getFileInfo","fileToArrayBuffer","loadImage","tslib__WEBPACK_IMPORTED_MODULE_0__","src","_a","_b","_c","label","blob","Promise","resolve","reject","reader","FileReader","addEventListener","result","readAsDataURL","sent","array","Uint8Array","readAsArrayBuffer","img","Image","onload","onerror","ImageType","SupportedImageMetaTag","ExifOrientation","top-left","top-right","bottom-right","bottom-left","left-top","right-top","right-bottom","left-bottom","XResolution","YResolution","readJPEGExifMetaData","_this","module_1","e","then","t","bind","default","parseMetaData","data","tags_1","exif","getAll","Object","keys","forEach","key","value","numerator","pngChunksExtract","readPNGXMPMetaData","buffer","util","parsePNGChunks","chunks","iTXt","pHYs","i","chunk","dv","PixelPerUnitX","PixelPerUnitY","length","name","String","fromCharCode","DataView","getUint8","getUint32","readImageMetaTags","type","trys","push","PNG","xmpMetaData","metadata","tags","match","tag","name_1","parseXMPMetaData","JPEG","getImageInfo","getOrientation","Orientation","imageMetaData_XResolution","DPI_WEB_BASELINE","fileInfo","width","height","readImageMetaData","scaleFactor","scaleFactorFromFilename","trim","parseFloat","getScaleFactorFromFile","Math","round","getMetaTagNumericValue","getScaleFactor","imageMetaData_getOrientationFromTags","tagValue","numericValue","parseInt","isNaN","defaultValue","num","naturalWidth","naturalHeight","orientation","isImageRotated","PixelXDimension","imageOrientationUtil","RECENTS_COLLECTION","isRotated","getCssFromImageOrientation","ORIENT_TRANSFORMS","1","2","3","4","5","6","7","8","newUploadServiceImpl_NewUploadServiceImpl","NewUploadServiceImpl","tenantContext","tenantUploadParams","shouldCopyFileToRecents","onFileSuccess","cancellableFileUpload","fileId","mediaFile","details","copyFileToUsersCollection","catch","console","log","id","cancel","releaseCancellableFile","onFileProgress","portion","size","domain_progress","creationDate","Date","now","toJSON","onFileError","mediaErrorName","description","Error","message","cancellableFilesUploads","config","tenantAuthProvider","authProvider","userAuthProvider","tenantMediaStore","media_store","userMediaStore","userContext","media_core","create","setUploadParams","uploadParams","createUploadController","upload_controller","addFiles","addFilesWithSource","map","source","types","LocalUpload","context","collection","popup_config","touchFileDescriptors","v4_default","occurrenceKey","promisedTouchFiles","touchFiles","cancellableFileUploads","fileWithSource","userUpfrontId","userOccurrenceKey","deferredUploadId","touchedFiles","touchedFile","created","find","uploadId","uploadableFile","content","mimeType","uploadableUpfrontIds","controller","observable","upload","upfrontId","tenantOccurrenceKey","options","createFile","response","abort","subscription","subscribe","next","state","status","unsubscribe","_error","set","tenantObservable","pipe","mediaFiles","emitPreviews","mediaType","getMediaTypeFromFile","devicePixelRatio","imageInfo","imageMetaData","dimensions","getPreviewFromImage","PastedScreenshot","window","img_1","snapshoter","URL","createObjectURL","revokeObjectURL","dist_default","a","getDimensions","end","getPreviewFromBlob_getPreviewFromBlob","sourceFileId","sourceCollection","collectionName","auth","body","sourceFile","owner","source_file","params","copyFileWithToken","localUpload_LocalUploadComponent","LocalUploadComponent","call","onFilesAdded","onFilePreviewUpdate","onFileUploading","onFileConverting","onFileConverted","onUploadError","uploadService","uniqueIdentifier","component","process","__WEBPACK_AMD_DEFINE_RESULT__","isArray","Array","obj","toString","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","_maxListeners","maxListeners","newListener","verboseMemoryLeak","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","emitWarning","trace","EventEmitter","searchListenerTree","handlers","tree","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","listeners","typeLength","currentType","nextType","_listeners","hasOwnProperty","concat","**","EventEmitter2","setMaxListeners","n","fn","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","self","_origin","_on","args","l","j","al","_all","slice","ns","split","emitAsync","promises","all","prependListener","_onAny","prependAny","unshift","shift","warned","leafs","iLeaf","position","splice","recursivelyGarbageCollect","root","Function","offAny","fns","eventNames","listenerCount","listenersAny","exports","module","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","__generator","f","y","g","_","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","defineProperty","isSafari","navigator","test","userAgent","VideoSnapshot","loadVideo","time","video","document","createElement","preload","videoUrl","muted","play","currentTime","duration","getSmartTime","timeupdateHandler","removeEventListener","pause","videoWidth","videoHeight","url","takeSnapshot","canvas","getContext","drawImage","toDataURL","revoke","start","middle","mapAuthToSourceFileOwner","_atlaskit_media_core__WEBPACK_IMPORTED_MODULE_0__","clientId","token","baseUrl","SmartMediaProgress","_util_handleError__WEBPACK_IMPORTED_MODULE_0__","startTime","measureTime","isValidSize","isValidProgress","isValidStartTime","isValidMeasureTime","get","enumerable","configurable","overallTime","expectedFinishTime","absolute","max","timeLeft","handleError","alias","errorMessage","stack","LocalFileSource","UploadController","setAbort","abortFunction"],"mappings":"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","file":"static/js/1.6937d162.chunk.js","sourcesContent":["import { EventEmitter2 } from 'eventemitter2';\n\nvar GenericEventEmitter =\n/** @class */\nfunction () {\n  function GenericEventEmitter() {\n    this.emitter = new EventEmitter2({\n      wildcard: true\n    });\n  }\n\n  GenericEventEmitter.prototype.once = function (event, listener) {\n    this.emitter.once(event, listener);\n  };\n\n  GenericEventEmitter.prototype.on = function (event, listener) {\n    this.emitter.on(event, listener);\n  };\n\n  GenericEventEmitter.prototype.onAny = function (listener) {\n    this.emitter.onAny(listener);\n  };\n\n  GenericEventEmitter.prototype.addListener = function (event, listener) {\n    this.emitter.addListener(event, listener);\n  };\n\n  GenericEventEmitter.prototype.off = function (event, listener) {\n    this.emitter.off(event, listener);\n  };\n\n  GenericEventEmitter.prototype.removeListener = function (event, handler) {\n    this.emitter.removeListener(event, handler);\n  };\n\n  GenericEventEmitter.prototype.removeAllListeners = function (event) {\n    // We want to explicitly call removeAllListeners without any argument if event is undefined, otherwise will EventEmitter fail\n    if (event === undefined) {\n      this.emitter.removeAllListeners();\n    } else {\n      this.emitter.removeAllListeners(event);\n    }\n  };\n\n  GenericEventEmitter.prototype.emit = function (event, payload) {\n    return this.emitter.emit(event, payload);\n  };\n\n  return GenericEventEmitter;\n}();\n\nexport { GenericEventEmitter };","import * as tslib_1 from \"tslib\";\nimport { GenericEventEmitter } from '../util/eventEmitter';\n\nvar UploadComponent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(UploadComponent, _super);\n\n  function UploadComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  UploadComponent.prototype.emitUploadsStart = function (files) {\n    this.emit('uploads-start', {\n      files: files\n    });\n  };\n\n  UploadComponent.prototype.emitUploadProgress = function (file, progress) {\n    this.emit('upload-status-update', {\n      file: file,\n      progress: progress\n    });\n  };\n\n  UploadComponent.prototype.emitUploadPreviewUpdate = function (file, preview) {\n    this.emit('upload-preview-update', {\n      file: file,\n      preview: preview\n    });\n  };\n\n  UploadComponent.prototype.emitUploadProcessing = function (file) {\n    this.emit('upload-processing', {\n      file: file\n    });\n  };\n\n  UploadComponent.prototype.emitUploadEnd = function (file, fileDetails) {\n    this.emit('upload-end', {\n      file: file,\n      public: fileDetails\n    });\n  };\n\n  UploadComponent.prototype.emitUploadError = function (file, error) {\n    this.emit('upload-error', {\n      file: file,\n      error: error\n    });\n  };\n\n  return UploadComponent;\n}(GenericEventEmitter);\n\nexport { UploadComponent };","import * as tslib_1 from \"tslib\";\nexport function dataURItoFile(dataURI, filename) {\n  if (filename === void 0) {\n    filename = 'untitled';\n  }\n\n  if (dataURI.length === 0) {\n    throw new Error('dataURI not found');\n  } // convert base64/URLEncoded data component to raw binary data held in a string\n\n\n  var dataURIParts = dataURI.split(',');\n  var byteString = dataURIParts[0].indexOf('base64') >= 0 ? atob(dataURIParts[1]) : decodeURIComponent(dataURIParts[1]); // separate out the mime component\n\n  var mimeString;\n\n  try {\n    mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n  } catch (e) {\n    // https://stackoverflow.com/questions/1176022/unknown-file-type-mime\n    mimeString = 'application/octet-stream';\n  } // write the bytes of the string to a typed array\n\n\n  var intArray = new Uint8Array(byteString.length);\n\n  for (var i = 0; i < byteString.length; i++) {\n    intArray[i] = byteString.charCodeAt(i);\n  }\n\n  var blob = new Blob([intArray], {\n    type: mimeString\n  });\n\n  try {\n    return new File([blob], filename, {\n      type: mimeString\n    });\n  } catch (e) {\n    // IE11 does not allow the File constructor (yay!)\n    // we get around this by decorating the blob instance with File properties\n    // effectively casting up from Blob to File.\n    var ie11File = blob;\n    var date = new Date();\n    ie11File.lastModified = date.getTime();\n    ie11File.lastModifiedDate = date;\n    ie11File.name = filename;\n    ie11File.webkitRelativePath = '';\n    return ie11File;\n  }\n}\nexport function fileToDataURI(blob) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      var result = reader.result;\n\n      if (typeof result === 'string') {\n        resolve(result);\n      } else if (result === null) {\n        reject();\n      }\n    });\n    reader.addEventListener('error', reject);\n    reader.readAsDataURL(blob);\n  });\n}\nexport function getFileInfo(file, src) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var _a, _b;\n\n    return tslib_1.__generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = {\n            file: file\n          };\n          _b = src;\n          if (_b) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , fileToDataURI(file)];\n\n        case 1:\n          _b = _c.sent();\n          _c.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          , (_a.src = _b, _a)];\n      }\n    });\n  });\n}\nexport function getFileInfoFromSrc(src, file) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var _a, _b;\n\n    return tslib_1.__generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = {};\n          _b = file;\n          if (_b) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , dataURItoFile(src)];\n\n        case 1:\n          _b = _c.sent();\n          _c.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          , (_a.file = _b, _a.src = src, _a)];\n      }\n    });\n  });\n}\nexport function fileToArrayBuffer(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      var array = new Uint8Array(reader.result);\n      resolve(array);\n    });\n    reader.addEventListener('error', reject);\n    reader.readAsArrayBuffer(file);\n  });\n}\nexport function loadImage(src) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n    img.src = src;\n\n    img.onload = function () {\n      resolve(img);\n    };\n\n    img.onerror = reject;\n  });\n}","export var ImageType;\n\n(function (ImageType) {\n  ImageType[\"JPEG\"] = \"image/jpeg\";\n  ImageType[\"PNG\"] = \"image/png\";\n})(ImageType || (ImageType = {}));\n\nexport var SupportedImageMetaTag;\n\n(function (SupportedImageMetaTag) {\n  SupportedImageMetaTag[\"XResolution\"] = \"XResolution\";\n  SupportedImageMetaTag[\"YResolution\"] = \"YResolution\";\n  SupportedImageMetaTag[\"Orientation\"] = \"Orientation\";\n})(SupportedImageMetaTag || (SupportedImageMetaTag = {})); // http://sylvana.net/jpegcrop/exif_orientation.html\n\n\nexport var ExifOrientation = {\n  'top-left': 1,\n  'top-right': 2,\n  'bottom-right': 3,\n  'bottom-left': 4,\n  'left-top': 5,\n  'right-top': 6,\n  'right-bottom': 7,\n  'left-bottom': 8\n};","import * as tslib_1 from \"tslib\";\nimport { SupportedImageMetaTag } from './types';\nvar XResolution = SupportedImageMetaTag.XResolution,\n    YResolution = SupportedImageMetaTag.YResolution;\nvar loadImage;\nexport function readJPEGExifMetaData(file) {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n      var module_1;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!loadImage) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , import('blueimp-load-image')];\n\n          case 1:\n            module_1 = _a.sent();\n            loadImage = module_1.default || module_1;\n            _a.label = 2;\n\n          case 2:\n            loadImage.parseMetaData(file, function (data) {\n              try {\n                var tags_1 = data && data.exif ? data.exif.getAll() : {};\n                Object.keys(tags_1).forEach(function (key) {\n                  var value = tags_1[key];\n\n                  if (typeof value === 'object' && (key === XResolution || key === YResolution) && 'numerator' in value) {\n                    // some test images had this structure, so just take the numerator value to simplify returned value\n                    tags_1[key] = value.numerator;\n                  }\n\n                  if (typeof tags_1[key] === 'number') {\n                    // in case numbers types were auto-converted, keep everything the same between jpeg & png we keep as strings\n                    tags_1[key] = \"\" + tags_1[key];\n                  }\n                });\n                resolve(tags_1);\n              } catch (e) {\n                reject(e);\n              }\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  });\n}","import * as tslib_1 from \"tslib\";\nimport { fileToArrayBuffer } from '../util';\nvar pngChunksExtract;\nexport function readPNGXMPMetaData(file) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var module_1, buffer, chunks;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!!pngChunksExtract) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , import('png-chunks-extract')];\n\n        case 1:\n          module_1 = _a.sent();\n          pngChunksExtract = module_1.default || module_1;\n          _a.label = 2;\n\n        case 2:\n          return [4\n          /*yield*/\n          , fileToArrayBuffer(file)];\n\n        case 3:\n          buffer = _a.sent();\n          chunks = pngChunksExtract(buffer);\n          return [4\n          /*yield*/\n          , parsePNGChunks(chunks)];\n\n        case 4:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport function parsePNGChunks(chunks) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var iTXt, pHYs, i, chunk, dv, unitSpecifier, PixelPerUnitX, PixelPerUnitY;\n    return tslib_1.__generator(this, function (_a) {\n      iTXt = '';\n      pHYs = {};\n      /**\n       * http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html#C.Summary-of-standard-chunks\n       * Order of every chunk is not guaranteed.\n       * And both iTXt and pHYs are Ancillary chunks.\n       */\n\n      for (i = 0; i < chunks.length; ++i) {\n        chunk = chunks[i]; // Must be last\n\n        if (chunk.name === 'IEND') {\n          break;\n        }\n        /**\n         * http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html#C.Anc-text\n         * iTXt contains the useful XMP/XML string data of meta tags\n         */\n\n\n        if (chunk.name === 'iTXt') {\n          iTXt = String.fromCharCode.apply(null, chunk.data);\n        }\n        /**\n         * http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html#C.pHYs\n         * Pixels per unit, X axis: 4 bytes (unsigned integer)\n         * Pixels per unit, Y axis: 4 bytes (unsigned integer)\n         * Unit specifier:          1 byte  (0: unit is unknown 1: unit is the meter)\n         */\n\n\n        if (chunk.name === 'pHYs') {\n          dv = new DataView(chunk.data.buffer);\n          unitSpecifier = dv.getUint8(8); // meter\n\n          if (unitSpecifier === 1) {\n            PixelPerUnitX = dv.getUint32(0);\n            PixelPerUnitY = dv.getUint32(4);\n            pHYs = {\n              PixelPerUnitX: PixelPerUnitX,\n              PixelPerUnitY: PixelPerUnitY\n            };\n          }\n        }\n      }\n\n      return [2\n      /*return*/\n      , {\n        iTXt: iTXt,\n        pHYs: pHYs\n      }];\n    });\n  });\n}","import * as tslib_1 from \"tslib\";\nimport { ImageType } from './types';\nimport { readJPEGExifMetaData } from './parseJPEG';\nimport { readPNGXMPMetaData } from './parsePNG';\nimport { parseXMPMetaData } from './parsePNGXMP';\nexport function readImageMetaTags(file) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var type, _a, iTXt, pHYs, xmpMetaData, e_1;\n\n    return tslib_1.__generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          type = file.type;\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 6,, 7]);\n\n          if (!(type === ImageType.PNG)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , readPNGXMPMetaData(file)];\n\n        case 2:\n          _a = _b.sent(), iTXt = _a.iTXt, pHYs = _a.pHYs;\n          xmpMetaData = tslib_1.__assign({}, parseXMPMetaData(iTXt), pHYs);\n          return [2\n          /*return*/\n          , xmpMetaData];\n\n        case 3:\n          if (!(file.type === ImageType.JPEG)) return [3\n          /*break*/\n          , 5];\n          return [4\n          /*yield*/\n          , readJPEGExifMetaData(file)];\n\n        case 4:\n          return [2\n          /*return*/\n          , _b.sent()];\n\n        case 5:\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          e_1 = _b.sent();\n          return [3\n          /*break*/\n          , 7];\n\n        case 7:\n          return [2\n          /*return*/\n          , null];\n      }\n    });\n  });\n}","export function parseXMPMetaData(xmpMetaData) {\n  var metadata = {};\n  var tags = xmpMetaData.match(/<(tiff|exif):.+>/gi);\n\n  if (tags) {\n    tags.forEach(function (tag) {\n      var match = tag.match(/<(tiff|exif):([^>]+)>([^<]+)/i);\n\n      if (match) {\n        var name_1 = match[2];\n        metadata[name_1] = match[3];\n      }\n    });\n  }\n\n  return metadata;\n}","import * as tslib_1 from \"tslib\";\nimport { SupportedImageMetaTag, ExifOrientation } from './types';\nimport { readImageMetaTags } from './metatags';\nimport { loadImage } from '../util';\nimport { isRotated } from './imageOrientationUtil';\nvar Orientation = SupportedImageMetaTag.Orientation,\n    XResolution = SupportedImageMetaTag.XResolution; // http://bonfx.com/why-is-the-web-72-dpi-and-print-300-dpi/\n\nvar DPI_WEB_BASELINE = 72;\nexport { ExifOrientation } from './types';\nexport function getImageInfo(fileInfo) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var metadata, width, height, tags, scaleFactor;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , readImageMetaData(fileInfo)];\n\n        case 1:\n          metadata = _a.sent();\n\n          if (!metadata) {\n            return [2\n            /*return*/\n            , null];\n          }\n\n          width = metadata.width, height = metadata.height, tags = metadata.tags;\n          scaleFactor = getScaleFactor(fileInfo.file, tags);\n          return [2\n          /*return*/\n          , {\n            scaleFactor: scaleFactor,\n            width: width,\n            height: height\n          }];\n      }\n    });\n  });\n}\nexport function getScaleFactor(file, tags) {\n  var scaleFactorFromFilename = getScaleFactorFromFile(file);\n\n  if (scaleFactorFromFilename !== null) {\n    return scaleFactorFromFilename;\n  } else if (tags) {\n    /**\n     * Scale Factor is actually a 2D thing, but in practice X & Y are same in 99% cases.\n     * So we are only relying on X axis.\n     */\n    if (typeof tags['PixelPerUnitX'] === 'number') {\n      // 1 inch = 0.0254 meters\n      return Math.round(tags['PixelPerUnitX'] * 0.0254) / DPI_WEB_BASELINE;\n    } else {\n      return getMetaTagNumericValue(tags, XResolution, DPI_WEB_BASELINE) / DPI_WEB_BASELINE;\n    }\n  } else {\n    return 1;\n  }\n}\n\nvar getOrientationFromTags = function getOrientationFromTags(tags) {\n  if (tags && tags[Orientation]) {\n    var tagValue = tags[Orientation];\n\n    if (tagValue) {\n      var numericValue = parseInt(tagValue, 10);\n\n      if (isNaN(numericValue)) {\n        return ExifOrientation[tagValue];\n      }\n\n      return numericValue;\n    }\n  }\n\n  return 1;\n};\n\nexport function getOrientation(file) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var tags;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , readImageMetaTags(file)];\n\n        case 1:\n          tags = _a.sent();\n          return [2\n          /*return*/\n          , getOrientationFromTags(tags)];\n      }\n    });\n  });\n}\nexport function getMetaTagNumericValue(tags, key, defaultValue) {\n  try {\n    var num = parseFloat(\"\" + tags[key]);\n\n    if (!isNaN(num)) {\n      return num;\n    }\n  } catch (e) {//\n  }\n\n  return defaultValue;\n}\nexport function getScaleFactorFromFile(file) {\n  try {\n    // filenames with scale ratio in name take precedence - eg. filename@2x.png\n    var match = file.name.trim().match(/@([0-9\\.]+)x\\.[a-z]{3}$/);\n\n    if (match) {\n      return parseFloat(match[1]);\n    }\n  } catch (e) {// parse problem, return null\n  }\n\n  return null;\n}\nexport function readImageMetaData(fileInfo) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var file, src, type, width, height, tags, img, e_1, naturalWidth, naturalHeight, orientation, isImageRotated, data;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          file = fileInfo.file, src = fileInfo.src;\n          type = file.type;\n          width = 0;\n          height = 0;\n          return [4\n          /*yield*/\n          , readImageMetaTags(file)];\n\n        case 1:\n          tags = _a.sent(); // since we're reading metadata anyway, try to get dimensions from there...\n\n          if (tags && tags.PixelXDimension) {\n            width = getMetaTagNumericValue(tags, 'PixelXDimension', 0);\n          }\n\n          if (tags && tags.PixelXDimension) {\n            height = getMetaTagNumericValue(tags, 'PixelYDimension', 0);\n          }\n\n          if (!(width === 0 && height === 0)) return [3\n          /*break*/\n          , 6];\n          img = void 0;\n          _a.label = 2;\n\n        case 2:\n          _a.trys.push([2, 4,, 5]);\n\n          return [4\n          /*yield*/\n          , loadImage(src)];\n\n        case 3:\n          img = _a.sent();\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          e_1 = _a.sent();\n          return [2\n          /*return*/\n          , null];\n\n        case 5:\n          naturalWidth = img.naturalWidth, naturalHeight = img.naturalHeight;\n          width = naturalWidth;\n          height = naturalHeight;\n          _a.label = 6;\n\n        case 6:\n          orientation = getOrientationFromTags(tags);\n          isImageRotated = isRotated(orientation);\n          data = {\n            type: type,\n            width: isImageRotated ? height : width,\n            height: isImageRotated ? width : height,\n            tags: tags\n          };\n          return [2\n          /*return*/\n          , data];\n      }\n    });\n  });\n}\nexport * from './imageOrientationUtil';","export var RECENTS_COLLECTION = 'recents';","var ORIENT_TRANSFORMS = {\n  1: 'none',\n  2: 'rotateY(180deg)',\n  3: 'rotate(180deg)',\n  4: 'rotate(180deg) rotateY(180deg)',\n  5: 'rotate(270deg) rotateY(180deg)',\n  6: 'rotate(90deg)',\n  7: 'rotate(90deg) rotateY(180deg)',\n  8: 'rotate(270deg)'\n};\n/**\n * Returns true if image rotated 90 or 270 degrees (on it's side)\n */\n\nexport var isRotated = function isRotated(orientation) {\n  return orientation >= 5;\n};\nexport var getCssFromImageOrientation = function getCssFromImageOrientation(orientation) {\n  return ORIENT_TRANSFORMS[orientation];\n};","import * as tslib_1 from \"tslib\";\nimport { getImageInfo, getFileInfo } from '@atlaskit/media-ui';\nexport function getPreviewFromImage(file, devicePixelRatio) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var fileInfo, imageInfo, width, height, scaleFactor, preview;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , getFileInfo(file)];\n\n        case 1:\n          fileInfo = _a.sent();\n          return [4\n          /*yield*/\n          , getImageInfo(fileInfo)];\n\n        case 2:\n          imageInfo = _a.sent();\n\n          if (imageInfo === null) {\n            return [2\n            /*return*/\n            , {\n              file: file\n            }];\n          } else {\n            width = imageInfo.width, height = imageInfo.height, scaleFactor = imageInfo.scaleFactor;\n            preview = {\n              file: file,\n              dimensions: {\n                width: width,\n                height: height\n              },\n              scaleFactor: devicePixelRatio || scaleFactor\n            };\n            return [2\n            /*return*/\n            , preview];\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\nexport var SCALE_FACTOR_DEFAULT = 1;","import * as tslib_1 from \"tslib\";\nimport uuidV4 from 'uuid/v4';\nimport { getMediaTypeFromMimeType, ContextFactory, fileStreamsCache } from '@atlaskit/media-core';\nimport { MediaStore, UploadController } from '@atlaskit/media-store';\nimport { EventEmitter2 } from 'eventemitter2';\nimport { map } from 'rxjs/operators/map';\nimport { RECENTS_COLLECTION } from '../popup/config';\nimport { mapAuthToSourceFileOwner } from '../popup/domain/source-file';\nimport { getPreviewFromImage } from '../util/getPreviewFromImage';\nimport { SmartMediaProgress } from '../domain/progress';\nimport { LocalFileSource } from '../service/types';\nimport { getPreviewFromBlob } from '../util/getPreviewFromBlob';\n\nvar NewUploadServiceImpl =\n/** @class */\nfunction () {\n  function NewUploadServiceImpl(tenantContext, tenantUploadParams, shouldCopyFileToRecents) {\n    var _this = this;\n\n    this.tenantContext = tenantContext;\n    this.tenantUploadParams = tenantUploadParams;\n    this.shouldCopyFileToRecents = shouldCopyFileToRecents;\n\n    this.emit = function (event, payload) {\n      _this.emitter.emit(event, payload);\n    };\n\n    this.onFileSuccess = function (cancellableFileUpload, fileId) {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var mediaFile, details;\n\n        var _this = this;\n\n        return tslib_1.__generator(this, function (_a) {\n          mediaFile = cancellableFileUpload.mediaFile;\n          this.copyFileToUsersCollection(fileId) // tslint:disable-next-line:no-console\n          .catch(console.log); // We intentionally swallow these errors\n\n          this.emit('file-converting', {\n            file: mediaFile\n          });\n          details = {\n            id: fileId\n          };\n          this.emit('file-converted', {\n            file: mediaFile,\n            public: details\n          });\n\n          cancellableFileUpload.cancel = function () {\n            _this.releaseCancellableFile(mediaFile);\n          };\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n\n    this.onFileProgress = function (_a, portion) {\n      var mediaFile = _a.mediaFile,\n          file = _a.file;\n      var size = file.size;\n      var progress = new SmartMediaProgress(size, size * portion, mediaFile.creationDate, Date.now());\n\n      _this.emit('file-uploading', {\n        file: mediaFile,\n        progress: progress.toJSON()\n      });\n    };\n\n    this.onFileError = function (mediaFile, mediaErrorName, error) {\n      _this.releaseCancellableFile(mediaFile);\n\n      if (error === 'canceled') {\n        // Specific error coming from chunkinator via rejected fileId promise.\n        // We do not want to trigger error in this case.\n        return;\n      }\n\n      var description = error instanceof Error ? error.message : error;\n\n      _this.emit('file-upload-error', {\n        file: mediaFile,\n        error: {\n          fileId: mediaFile.id,\n          description: description,\n          name: mediaErrorName\n        }\n      });\n    };\n\n    this.emitter = new EventEmitter2();\n    this.cancellableFilesUploads = {};\n    var _a = tenantContext.config,\n        tenantAuthProvider = _a.authProvider,\n        userAuthProvider = _a.userAuthProvider; // We need a non user auth store, since we want to create the empty file in the public collection\n\n    this.tenantMediaStore = new MediaStore({\n      authProvider: tenantAuthProvider\n    });\n\n    if (userAuthProvider) {\n      this.userMediaStore = new MediaStore({\n        authProvider: userAuthProvider\n      }); // We need to use the userAuth to upload this file (recents)\n\n      this.userContext = ContextFactory.create({\n        userAuthProvider: userAuthProvider,\n        authProvider: userAuthProvider\n      });\n    }\n  }\n\n  NewUploadServiceImpl.prototype.setUploadParams = function (uploadParams) {\n    this.tenantUploadParams = uploadParams;\n  }; // Used for testing\n\n\n  NewUploadServiceImpl.prototype.createUploadController = function () {\n    return new UploadController();\n  };\n\n  NewUploadServiceImpl.prototype.addFiles = function (files) {\n    this.addFilesWithSource(files.map(function (file) {\n      return {\n        file: file,\n        source: LocalFileSource.LocalUpload\n      };\n    }));\n  };\n\n  NewUploadServiceImpl.prototype.addFilesWithSource = function (files) {\n    var _this = this;\n\n    if (files.length === 0) {\n      return;\n    }\n\n    var creationDate = Date.now();\n\n    var _a = this,\n        userContext = _a.userContext,\n        tenantContext = _a.tenantContext,\n        shouldCopyFileToRecents = _a.shouldCopyFileToRecents;\n\n    var context = shouldCopyFileToRecents ? tenantContext : userContext;\n    var collection = shouldCopyFileToRecents ? this.tenantUploadParams.collection : RECENTS_COLLECTION;\n\n    if (!context) {\n      return;\n    }\n\n    var touchFileDescriptors = [];\n\n    for (var i = 0; i < files.length; i++) {\n      touchFileDescriptors.push({\n        fileId: uuidV4(),\n        occurrenceKey: uuidV4(),\n        collection: collection\n      });\n    }\n\n    var promisedTouchFiles = context.file.touchFiles(touchFileDescriptors, collection);\n    var cancellableFileUploads = files.map(function (fileWithSource, i) {\n      var file = fileWithSource.file,\n          source = fileWithSource.source;\n      var _a = touchFileDescriptors[i],\n          id = _a.fileId,\n          occurrenceKey = _a.occurrenceKey;\n      var deferredUploadId = promisedTouchFiles.then(function (touchedFiles) {\n        var touchedFile = touchedFiles.created.find(function (touchedFile) {\n          return touchedFile.fileId === id;\n        });\n\n        if (!touchedFile) {\n          throw new Error('Cant retrieve uploadId from result of touch endpoint call');\n        }\n\n        return touchedFile.uploadId;\n      });\n      var uploadableFile = {\n        collection: collection,\n        content: file,\n        name: file.name,\n        mimeType: file.type\n      };\n      var uploadableUpfrontIds = {\n        id: id,\n        occurrenceKey: occurrenceKey,\n        deferredUploadId: deferredUploadId\n      };\n\n      var controller = _this.createUploadController();\n\n      var observable = context.file.upload(uploadableFile, controller, uploadableUpfrontIds);\n      var userUpfrontId;\n      var userOccurrenceKey;\n      var upfrontId = Promise.resolve(id);\n\n      if (!shouldCopyFileToRecents) {\n        var tenantOccurrenceKey = uuidV4();\n        var collection_1 = _this.tenantUploadParams.collection;\n        var options = {\n          collection: collection_1,\n          occurrenceKey: tenantOccurrenceKey\n        }; // We want to create an empty file in the tenant collection\n        // TODO [MS-1355]: using context.file.touchFiles instead of createFile will speed up things\n        // since we can lookup the id in the cache without wait for this to finish\n\n        upfrontId = _this.tenantMediaStore.createFile(options).then(function (response) {\n          return response.data.id;\n        });\n        userUpfrontId = Promise.resolve(id);\n        userOccurrenceKey = Promise.resolve(occurrenceKey);\n      }\n\n      var mediaFile = {\n        id: id,\n        upfrontId: upfrontId,\n        userUpfrontId: userUpfrontId,\n        userOccurrenceKey: userOccurrenceKey,\n        name: file.name,\n        size: file.size,\n        creationDate: creationDate,\n        type: file.type,\n        occurrenceKey: occurrenceKey\n      };\n      var cancellableFileUpload = {\n        mediaFile: mediaFile,\n        file: file,\n        source: source,\n        cancel: function cancel() {\n          // we can't do \"cancellableFileUpload.cancel = controller.abort\" because will change the \"this\" context\n          controller.abort();\n        }\n      };\n      var subscription = observable.subscribe({\n        next: function next(state) {\n          if (state.status === 'uploading') {\n            _this.onFileProgress(cancellableFileUpload, state.progress);\n          }\n\n          if (state.status === 'processing') {\n            subscription.unsubscribe();\n\n            _this.onFileSuccess(cancellableFileUpload, id);\n          }\n        },\n        error: function error(_error) {\n          _this.onFileError(mediaFile, 'upload_fail', _error);\n        }\n      });\n      _this.cancellableFilesUploads[id] = cancellableFileUpload; // Save observable in the cache\n      // We want to save the observable without collection too, due consumers using cards without collection.\n\n      fileStreamsCache.set(id, observable);\n      upfrontId.then(function (id) {\n        // We assign the tenant id to the observable to not emit user id instead\n        var tenantObservable = observable.pipe(map(function (file) {\n          return tslib_1.__assign({}, file, {\n            id: id\n          });\n        }));\n        fileStreamsCache.set(id, tenantObservable);\n      });\n      return cancellableFileUpload;\n    });\n    var mediaFiles = cancellableFileUploads.map(function (cancellableFileUpload) {\n      return cancellableFileUpload.mediaFile;\n    });\n    this.emit('files-added', {\n      files: mediaFiles\n    });\n    this.emitPreviews(cancellableFileUploads);\n  };\n\n  NewUploadServiceImpl.prototype.cancel = function (id) {\n    var _this = this;\n\n    if (id) {\n      var cancellableFileUpload = this.cancellableFilesUploads[id];\n\n      if (cancellableFileUpload && cancellableFileUpload.cancel) {\n        cancellableFileUpload.cancel();\n      }\n    } else {\n      Object.keys(this.cancellableFilesUploads).forEach(function (key) {\n        var cancellableFileUpload = _this.cancellableFilesUploads[key];\n\n        if (cancellableFileUpload.cancel) {\n          cancellableFileUpload.cancel();\n        }\n      });\n    }\n  };\n\n  NewUploadServiceImpl.prototype.on = function (event, listener) {\n    this.emitter.on(event, listener);\n  };\n\n  NewUploadServiceImpl.prototype.off = function (event, listener) {\n    this.emitter.off(event, listener);\n  };\n\n  NewUploadServiceImpl.prototype.emitPreviews = function (cancellableFileUploads) {\n    var _this = this;\n\n    cancellableFileUploads.forEach(function (cancellableFileUpload) {\n      var file = cancellableFileUpload.file,\n          mediaFile = cancellableFileUpload.mediaFile,\n          source = cancellableFileUpload.source;\n\n      var mediaType = _this.getMediaTypeFromFile(file);\n\n      if (mediaType === 'image') {\n        getPreviewFromImage(file, source === LocalFileSource.PastedScreenshot ? window.devicePixelRatio : undefined).then(function (preview) {\n          _this.emit('file-preview-update', {\n            file: mediaFile,\n            preview: preview\n          });\n        });\n      } else {\n        getPreviewFromBlob(file, mediaType).then(function (preview) {\n          _this.emit('file-preview-update', {\n            file: mediaFile,\n            preview: preview\n          });\n        });\n      }\n    });\n  };\n\n  NewUploadServiceImpl.prototype.getMediaTypeFromFile = function (file) {\n    var type = file.type;\n    return getMediaTypeFromMimeType(type);\n  };\n\n  NewUploadServiceImpl.prototype.releaseCancellableFile = function (mediaFile) {\n    delete this.cancellableFilesUploads[mediaFile.id];\n  }; // This method copies the file from the \"tenant collection\" to the \"user collection\" (recents).\n  // that means we need \"tenant auth\" as input and \"user auth\" as output\n\n\n  NewUploadServiceImpl.prototype.copyFileToUsersCollection = function (sourceFileId) {\n    var _a = this,\n        shouldCopyFileToRecents = _a.shouldCopyFileToRecents,\n        userMediaStore = _a.userMediaStore,\n        tenantUploadParams = _a.tenantUploadParams;\n\n    if (!shouldCopyFileToRecents || !userMediaStore) {\n      return Promise.resolve();\n    }\n\n    var sourceCollection = tenantUploadParams.collection;\n    var tenantAuthProvider = this.tenantContext.config.authProvider;\n    return tenantAuthProvider({\n      collectionName: sourceCollection\n    }).then(function (auth) {\n      var body = {\n        sourceFile: {\n          id: sourceFileId,\n          collection: sourceCollection,\n          owner: tslib_1.__assign({}, mapAuthToSourceFileOwner(auth))\n        }\n      };\n      var params = {\n        collection: RECENTS_COLLECTION\n      };\n      return userMediaStore.copyFileWithToken(body, params);\n    });\n  };\n\n  return NewUploadServiceImpl;\n}();\n\nexport { NewUploadServiceImpl };","var _this = this;\n\nimport * as tslib_1 from \"tslib\";\nimport VideoSnapshot from 'video-snapshot';\nexport var getPreviewFromBlob = function getPreviewFromBlob(file, mediaType) {\n  return new Promise(function (resolve, reject) {\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n      var src, img_1, snapshoter, dimensions, preview;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            src = URL.createObjectURL(file);\n            if (!(mediaType === 'image')) return [3\n            /*break*/\n            , 1];\n            img_1 = new Image();\n            img_1.src = src;\n\n            img_1.onload = function () {\n              var dimensions = {\n                width: img_1.width,\n                height: img_1.height\n              };\n              var preview = {\n                file: file,\n                dimensions: dimensions,\n                scaleFactor: 1\n              };\n              URL.revokeObjectURL(src);\n              resolve(preview);\n            };\n\n            img_1.onerror = reject;\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            if (!(mediaType === 'video')) return [3\n            /*break*/\n            , 3];\n            snapshoter = new VideoSnapshot(file);\n            return [4\n            /*yield*/\n            , snapshoter.getDimensions()];\n\n          case 2:\n            dimensions = _a.sent();\n            preview = {\n              file: file,\n              dimensions: dimensions,\n              scaleFactor: 1\n            };\n            snapshoter.end();\n            resolve(preview);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            resolve({\n              file: file\n            });\n            _a.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  });\n};","import * as tslib_1 from \"tslib\";\nimport { UploadComponent } from './component';\nimport { NewUploadServiceImpl } from '../service/newUploadServiceImpl';\n\nvar LocalUploadComponent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LocalUploadComponent, _super);\n\n  function LocalUploadComponent(context, config) {\n    var _this = _super.call(this) || this;\n\n    _this.onFilesAdded = function (_a) {\n      var files = _a.files;\n\n      _this.emitUploadsStart(files);\n    };\n\n    _this.onFilePreviewUpdate = function (_a) {\n      var file = _a.file,\n          preview = _a.preview;\n\n      _this.emitUploadPreviewUpdate(file, preview);\n    };\n\n    _this.onFileUploading = function (_a) {\n      var file = _a.file,\n          progress = _a.progress;\n\n      _this.emitUploadProgress(file, progress);\n    };\n\n    _this.onFileConverting = function (_a) {\n      var file = _a.file;\n\n      _this.emitUploadProcessing(file);\n    };\n\n    _this.onFileConverted = function (payload) {\n      _this.emitUploadEnd(payload.file, payload.public);\n    };\n\n    _this.onUploadError = function (_a) {\n      var file = _a.file,\n          error = _a.error;\n\n      _this.emitUploadError(file, error);\n    };\n\n    var tenantUploadParams = config.uploadParams;\n    _this.context = context;\n    var _a = config.shouldCopyFileToRecents,\n        shouldCopyFileToRecents = _a === void 0 ? true : _a;\n    _this.uploadService = new NewUploadServiceImpl(_this.context, tenantUploadParams, shouldCopyFileToRecents);\n    _this.config = config;\n\n    _this.uploadService.on('files-added', _this.onFilesAdded);\n\n    _this.uploadService.on('file-preview-update', _this.onFilePreviewUpdate);\n\n    _this.uploadService.on('file-uploading', _this.onFileUploading);\n\n    _this.uploadService.on('file-converting', _this.onFileConverting);\n\n    _this.uploadService.on('file-converted', _this.onFileConverted);\n\n    _this.uploadService.on('file-upload-error', _this.onUploadError);\n\n    return _this;\n  }\n\n  LocalUploadComponent.prototype.cancel = function (uniqueIdentifier) {\n    this.uploadService.cancel(uniqueIdentifier);\n  };\n\n  LocalUploadComponent.prototype.setUploadParams = function (uploadParams) {\n    this.uploadService.setUploadParams(uploadParams);\n  };\n\n  return LocalUploadComponent;\n}(UploadComponent);\n\nexport { LocalUploadComponent };","/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\n;\n!function (undefined) {\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    } else {\n      this._maxListeners = defaultMaxListeners;\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' + 'leak detected. ' + count + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.';\n\n    if (this.verboseMemoryLeak) {\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if (typeof process !== 'undefined' && process.emitWarning) {\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n\n    var listeners = [],\n        leaf,\n        len,\n        branch,\n        xTree,\n        xxTree,\n        isolatedBranch,\n        endReached,\n        typeLength = type.length,\n        currentType = type[i],\n        nextType = type[i + 1];\n\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n\n        return [tree];\n      }\n    }\n\n    if (currentType === '*' || currentType === '**' || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n          }\n        }\n\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === '*';\n\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if (branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n    }\n\n    xTree = tree['*'];\n\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1);\n    }\n\n    xxTree = tree['**'];\n\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        } // Build arrays of matching next branches and others.\n\n\n        for (branch in xxTree) {\n          if (branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {\n                '**': isolatedBranch\n              }, i + 1);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice(); //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n\n    for (var i = 0, len = type.length; i + 1 < len; i++) {\n      if (type[i] === '**' && type[i + 1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name !== undefined) {\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n\n        return true;\n      }\n\n      name = type.shift();\n    }\n\n    return true;\n  } // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function (n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function (event, fn) {\n    return this._once(event, fn, false);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function (event, fn) {\n    return this._once(event, fn, true);\n  };\n\n  EventEmitter.prototype._once = function (event, fn, prepend) {\n    this._many(event, 1, fn, prepend);\n\n    return this;\n  };\n\n  EventEmitter.prototype.many = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, false);\n  };\n\n  EventEmitter.prototype.prependMany = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, true);\n  };\n\n  EventEmitter.prototype._many = function (event, ttl, fn, prepend) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this._on(event, listener, prepend);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      if (al > 3) {\n        args = new Array(al);\n\n        for (j = 0; j < al; j++) {\n          args[j] = arguments[j];\n        }\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler[i].call(this, type);\n            break;\n\n          case 2:\n            handler[i].call(this, type, arguments[1]);\n            break;\n\n          case 3:\n            handler[i].call(this, type, arguments[1], arguments[2]);\n            break;\n\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n    }\n\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n\n      if (typeof handler === 'function') {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler.call(this);\n            break;\n\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n\n          default:\n            args = new Array(al - 1);\n\n            for (j = 1; j < al; j++) {\n              args[j - 1] = arguments[j];\n            }\n\n            handler.apply(this, args);\n        }\n\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n\n        for (j = 1; j < al; j++) {\n          args[j - 1] = arguments[j];\n        }\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler[i].call(this);\n            break;\n\n          case 2:\n            handler[i].call(this, arguments[1]);\n            break;\n\n          case 3:\n            handler[i].call(this, arguments[1], arguments[2]);\n            break;\n\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n\n      return true;\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n\n      return false;\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) {\n        return Promise.resolve([false]);\n      }\n    }\n\n    var promises = [];\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n\n    if (this._all) {\n      if (al > 3) {\n        args = new Array(al);\n\n        for (j = 1; j < al; j++) {\n          args[j] = arguments[j];\n        }\n      }\n\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            promises.push(this._all[i].call(this, type));\n            break;\n\n          case 2:\n            promises.push(this._all[i].call(this, type, arguments[1]));\n            break;\n\n          case 3:\n            promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n            break;\n\n          default:\n            promises.push(this._all[i].apply(this, args));\n        }\n      }\n    }\n\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n\n      switch (al) {\n        case 1:\n          promises.push(handler.call(this));\n          break;\n\n        case 2:\n          promises.push(handler.call(this, arguments[1]));\n          break;\n\n        case 3:\n          promises.push(handler.call(this, arguments[1], arguments[2]));\n          break;\n\n        default:\n          args = new Array(al - 1);\n\n          for (j = 1; j < al; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n\n      if (al > 3) {\n        args = new Array(al - 1);\n\n        for (j = 1; j < al; j++) {\n          args[j - 1] = arguments[j];\n        }\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            promises.push(handler[i].call(this));\n            break;\n\n          case 2:\n            promises.push(handler[i].call(this, arguments[1]));\n            break;\n\n          case 3:\n            promises.push(handler[i].call(this, arguments[1], arguments[2]));\n            break;\n\n          default:\n            promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function (type, listener) {\n    return this._on(type, listener, false);\n  };\n\n  EventEmitter.prototype.prependListener = function (type, listener) {\n    return this._on(type, listener, true);\n  };\n\n  EventEmitter.prototype.onAny = function (fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function (fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function (fn, prepend) {\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    } // Add the function to the event listener collection.\n\n\n    if (prepend) {\n      this._all.unshift(fn);\n    } else {\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function (type, listener, prepend) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n\n    this._events || init.call(this); // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n\n    this.emit('newListener', type, listener);\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      } // If we've already got an array, just add\n\n\n      if (prepend) {\n        this._events[type].unshift(listener);\n      } else {\n        this._events[type].push(listener);\n      } // Check for listener leak\n\n\n      if (!this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.off = function (type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,\n        leafs = [];\n\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({\n        _listeners: handlers\n      });\n    }\n\n    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n\n      if (isArray(handlers)) {\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if (this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        } else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if (this.wildcard) {\n            delete leaf._listeners;\n          } else {\n            delete this._events[type];\n          }\n        }\n\n        this.emit(\"removeListener\", type, listener);\n        return this;\n      } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n        if (this.wildcard) {\n          delete leaf._listeners;\n        } else {\n          delete this._events[type];\n        }\n\n        this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    function recursivelyGarbageCollect(root) {\n      if (root === undefined) {\n        return;\n      }\n\n      var keys = Object.keys(root);\n\n      for (var i in keys) {\n        var key = keys[i];\n        var obj = root[key];\n        if (obj instanceof Function || typeof obj !== \"object\" || obj === null) continue;\n\n        if (Object.keys(obj).length > 0) {\n          recursivelyGarbageCollect(root[key]);\n        }\n\n        if (Object.keys(obj).length === 0) {\n          delete root[key];\n        }\n      }\n    }\n\n    recursivelyGarbageCollect(this.listenerTree);\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function (fn) {\n    var i = 0,\n        l = 0,\n        fns;\n\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n\n      for (i = 0, l = fns.length; i < l; i++) {\n        if (fn === fns[i]) {\n          fns.splice(i, 1);\n          this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n\n      for (i = 0, l = fns.length; i < l; i++) {\n        this.emit(\"removeListenerAny\", fns[i]);\n      }\n\n      this._all = [];\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n    if (!this._events[type]) this._events[type] = [];\n\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.eventNames = function () {\n    return Object.keys(this._events);\n  };\n\n  EventEmitter.prototype.listenerCount = function (type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.listenersAny = function () {\n    if (this._all) {\n      return this._all;\n    } else {\n      return [];\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  } else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isSafari = typeof navigator !== 'undefined' && /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nvar VideoSnapshot = function () {\n  function VideoSnapshot(blob) {\n    var _this = this;\n\n    this.loadVideo = function (time) {\n      if (time === void 0) {\n        time = 0;\n      }\n\n      return new Promise(function (resolve) {\n        var video = document.createElement('video');\n        video.preload = 'metadata';\n        video.src = _this.videoUrl;\n        video.muted = true;\n\n        if (time === 0) {\n          video.play();\n        } else {\n          if (typeof time === 'number') {\n            video.currentTime = time;\n          } else if (typeof time === 'string') {\n            var duration = video.duration;\n            video.currentTime = _this.getSmartTime(time, duration);\n          }\n\n          if (isSafari) {\n            video.play();\n          }\n        }\n\n        video.addEventListener('timeupdate', function timeupdateHandler() {\n          video.removeEventListener('timeupdate', timeupdateHandler);\n          video.pause();\n          resolve(video);\n        });\n      });\n    };\n\n    this.getDimensions = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var video;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this.loadVideo()];\n\n            case 1:\n              video = _a.sent();\n              return [2, {\n                width: video.videoWidth,\n                height: video.videoHeight\n              }];\n          }\n        });\n      });\n    };\n\n    var url = URL.createObjectURL(blob);\n    this.videoUrl = url;\n  }\n\n  VideoSnapshot.prototype.takeSnapshot = function (time) {\n    return __awaiter(this, void 0, void 0, function () {\n      var video, canvas, context, dataURL;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, this.loadVideo(time)];\n\n          case 1:\n            video = _a.sent();\n            canvas = document.createElement('canvas');\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            context = canvas.getContext('2d');\n\n            if (!context) {\n              throw new Error('error creating canvas context');\n            }\n\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            dataURL = canvas.toDataURL();\n            return [2, dataURL];\n        }\n      });\n    });\n  };\n\n  VideoSnapshot.prototype.end = function () {\n    this.revoke();\n  };\n\n  VideoSnapshot.prototype.revoke = function () {\n    URL.revokeObjectURL(this.videoUrl);\n  };\n\n  VideoSnapshot.prototype.getSmartTime = function (time, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    var smartTimes = {\n      start: 0,\n      middle: duration / 2,\n      end: duration\n    };\n    return smartTimes[time];\n  };\n\n  return VideoSnapshot;\n}();\n\nexports.default = VideoSnapshot;","import { isClientBasedAuth } from '@atlaskit/media-core';\nexport function mapAuthToSourceFileOwner(auth) {\n  if (isClientBasedAuth(auth)) {\n    return {\n      id: auth.clientId,\n      token: auth.token,\n      baseUrl: auth.baseUrl\n    };\n  } else {\n    return auth;\n  }\n}","// TODO these classes are deprecated and will be removed as part of MSW-691\nimport { handleError } from '../util/handleError';\n\nvar SmartMediaProgress =\n/** @class */\nfunction () {\n  function SmartMediaProgress(size, progress, startTime, measureTime) {\n    this.size = size;\n    this.progress = progress;\n    this.startTime = startTime;\n    this.measureTime = measureTime;\n\n    if (!SmartMediaProgress.isValidSize(size)) {\n      handleError('wrong_file_size', 'Passed file size is incorrect.');\n      return;\n    }\n\n    if (!SmartMediaProgress.isValidProgress(size, progress)) {\n      handleError('wrong_progress', 'The progress format is incorrect.');\n      return;\n    }\n\n    if (!SmartMediaProgress.isValidStartTime(startTime)) {\n      handleError('wrong_start_time', 'The progress start time has incorrect format.');\n      return;\n    }\n\n    if (!SmartMediaProgress.isValidMeasureTime(startTime, measureTime)) {\n      handleError('wrong_measure_time', 'The progress measure time has incorrect format.');\n      return;\n    }\n\n    this.size = size;\n    this.progress = progress;\n    this.startTime = startTime;\n    this.measureTime = measureTime;\n  }\n\n  Object.defineProperty(SmartMediaProgress.prototype, \"absolute\", {\n    get: function get() {\n      return this.progress;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SmartMediaProgress.prototype, \"portion\", {\n    get: function get() {\n      return this.progress / this.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SmartMediaProgress.prototype, \"max\", {\n    get: function get() {\n      return this.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SmartMediaProgress.prototype, \"overallTime\", {\n    get: function get() {\n      return (this.measureTime - this.startTime) / this.portion;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SmartMediaProgress.prototype, \"expectedFinishTime\", {\n    get: function get() {\n      return this.startTime + this.overallTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SmartMediaProgress.prototype, \"timeLeft\", {\n    get: function get() {\n      return this.expectedFinishTime - this.measureTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SmartMediaProgress.prototype.toJSON = function () {\n    return {\n      absolute: this.absolute,\n      portion: this.portion,\n      max: this.max,\n      overallTime: this.overallTime,\n      expectedFinishTime: this.expectedFinishTime,\n      timeLeft: this.timeLeft\n    };\n  };\n\n  SmartMediaProgress.isValidSize = function (size) {\n    return typeof size === 'number' && size > 0;\n  };\n\n  SmartMediaProgress.isValidProgress = function (size, progress) {\n    return SmartMediaProgress.isValidSize(size) && typeof progress === 'number' && progress >= 0 && progress <= size;\n  };\n\n  SmartMediaProgress.isValidStartTime = function (startTime) {\n    return typeof startTime === 'number' && startTime > 0;\n  };\n\n  SmartMediaProgress.isValidMeasureTime = function (startTime, measureTime) {\n    return SmartMediaProgress.isValidStartTime(startTime) && typeof measureTime === 'number' && measureTime >= startTime;\n  };\n\n  return SmartMediaProgress;\n}();\n\nexport { SmartMediaProgress };","export var handleError = function handleError(alias, description) {\n  var stackTrace = Error().stack || '';\n  var descr = description || '';\n  var errorMessage = alias + \": \" + descr + \" \\n \" + stackTrace; // tslint:disable-next-line:no-console\n\n  console.error(errorMessage);\n};","export var MAX_FILE_SIZE_FOR_PREVIEW = 10e6; // 10 MB\n\nexport var LocalFileSource;\n\n(function (LocalFileSource) {\n  LocalFileSource[LocalFileSource[\"PastedFile\"] = 0] = \"PastedFile\";\n  LocalFileSource[LocalFileSource[\"PastedScreenshot\"] = 1] = \"PastedScreenshot\";\n  LocalFileSource[LocalFileSource[\"LocalUpload\"] = 2] = \"LocalUpload\";\n})(LocalFileSource || (LocalFileSource = {}));","var UploadController =\n/** @class */\nfunction () {\n  function UploadController() {}\n\n  UploadController.prototype.setAbort = function (abortFunction) {\n    this.abortFunction = abortFunction;\n  };\n\n  UploadController.prototype.abort = function () {\n    if (this.abortFunction) {\n      this.abortFunction();\n    }\n  };\n\n  return UploadController;\n}();\n\nexport { UploadController };"],"sourceRoot":""}