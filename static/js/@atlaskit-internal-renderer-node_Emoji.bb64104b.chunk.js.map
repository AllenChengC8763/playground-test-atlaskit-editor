{"version":3,"sources":["../node_modules/@atlaskit/editor-common/ui/Emoji/index.js","../node_modules/@atlaskit/renderer/react/nodes/emoji.js"],"names":["Emoji","_super","EmojiNode","props","_this","call","this","renderWithProvider","providers","_a","allowTextFallback","shortName","id","fallback","fitToHeight","emojiProvider","react","ResourcedEmoji","emojiId","showTooltip","providerFactory","tslib_es6","prototype","componentWillUnmount","destroy","render","withProviders","renderNode","emoji_EmojiItem","EmojiItem","apply","arguments","text","__webpack_exports__"],"mappings":"iJA6DeA,EArDf,SAAAC,GAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAI,KAAAC,KAAAH,IAAAG,KA2BA,OAzBAF,EAAAG,mBAAA,SAAAC,GACA,IAAAC,EAAAL,EAAAD,MACAO,EAAAD,EAAAC,kBACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,GACAC,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,YAEA,OAAAJ,IAAAF,EAAAO,cACeC,EAAA,cAAmB,YAAAH,GAAAF,GAGrBK,EAAA,cAAoBC,EAAA,EAAc,CAC/CC,QAAA,CACAN,KACAC,WACAF,aAEAI,cAAAP,EAAAO,cACAI,aAAA,EACAL,iBAIAV,EAAAgB,gBAAAjB,EAAAK,WAAA,IAAmDY,EAAA,EACnDhB,EAmBA,OAjDEiB,EAAA,UAAiBnB,EAAAD,GAiCnBC,EAAAoB,UAAAC,qBAAA,WACAjB,KAAAH,MAAAK,WAGAF,KAAAc,gBAAAI,WAIAtB,EAAAoB,UAAAG,OAAA,WACA,OAAWT,EAAA,cAAoBU,EAAA,EAAa,CAC5ClB,UAAA,kBACAY,gBAAAd,KAAAc,gBACAO,WAAArB,KAAAC,sBAIAL,EAlDA,CAmDEc,EAAA,eCtDEY,EAEJ,SAAA3B,GAGA,SAAA4B,IACA,cAAA5B,KAAA6B,MAAAxB,KAAAyB,YAAAzB,KAoBA,OAvBEe,EAAA,UAAiBQ,EAAA5B,GAMnB4B,EAAAP,UAAAG,OAAA,WACA,IAAAhB,EAAAH,KAAAH,MACAS,EAAAH,EAAAG,GACAJ,EAAAC,EAAAD,UACAG,EAAAF,EAAAE,UACAqB,EAAAvB,EAAAuB,KACAlB,EAAAL,EAAAK,YACA,OAAWE,EAAA,cAAoBhB,EAAK,CACpCU,mBAAA,EACAE,KACAD,YACAE,SAAAmB,EACAxB,YACAM,iBAIAe,EAxBA,CAyBEb,EAAA,eAEaiB,EAAA","file":"static/js/@atlaskit-internal-renderer-node_Emoji.bb64104b.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { ResourcedEmoji } from '@atlaskit/emoji';\nimport ProviderFactory, { WithProviders } from '../../providerFactory';\n\nvar EmojiNode =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiNode, _super);\n\n  function EmojiNode(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.renderWithProvider = function (providers) {\n      var _a = _this.props,\n          allowTextFallback = _a.allowTextFallback,\n          shortName = _a.shortName,\n          id = _a.id,\n          fallback = _a.fallback,\n          fitToHeight = _a.fitToHeight;\n\n      if (allowTextFallback && !providers.emojiProvider) {\n        return React.createElement(\"span\", null, fallback || shortName);\n      }\n\n      return React.createElement(ResourcedEmoji, {\n        emojiId: {\n          id: id,\n          fallback: fallback,\n          shortName: shortName\n        },\n        emojiProvider: providers.emojiProvider,\n        showTooltip: true,\n        fitToHeight: fitToHeight\n      });\n    };\n\n    _this.providerFactory = props.providers || new ProviderFactory();\n    return _this;\n  }\n\n  EmojiNode.prototype.componentWillUnmount = function () {\n    if (!this.props.providers) {\n      // new ProviderFactory is created if no `providers` has been set\n      // in this case when component is unmounted it's safe to destroy this providerFactory\n      this.providerFactory.destroy();\n    }\n  };\n\n  EmojiNode.prototype.render = function () {\n    return React.createElement(WithProviders, {\n      providers: ['emojiProvider'],\n      providerFactory: this.providerFactory,\n      renderNode: this.renderWithProvider\n    });\n  };\n\n  return EmojiNode;\n}(PureComponent);\n\nexport default EmojiNode;","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { Emoji } from '@atlaskit/editor-common';\n\nvar EmojiItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiItem, _super);\n\n  function EmojiItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  EmojiItem.prototype.render = function () {\n    var _a = this.props,\n        id = _a.id,\n        providers = _a.providers,\n        shortName = _a.shortName,\n        text = _a.text,\n        fitToHeight = _a.fitToHeight;\n    return React.createElement(Emoji, {\n      allowTextFallback: true,\n      id: id,\n      shortName: shortName,\n      fallback: text,\n      providers: providers,\n      fitToHeight: fitToHeight\n    });\n  };\n\n  return EmojiItem;\n}(PureComponent);\n\nexport default EmojiItem;"],"sourceRoot":""}