{"version":3,"sources":["../node_modules/@atlaskit/media-picker/components/browser.js"],"names":["__webpack_require__","r","__webpack_exports__","d","BrowserImpl","tslib__WEBPACK_IMPORTED_MODULE_0__","_localUpload__WEBPACK_IMPORTED_MODULE_1__","exenv__WEBPACK_IMPORTED_MODULE_2__","_super","context","browserConfig","uploadParams","_this","call","this","onFilePicked","filesArray","slice","browseElement","files","uploadService","addFiles","document","createElement","setAttribute","style","display","multiple","fileExtensions","join","body","appendChild","addEvents","prototype","addEventListener","removeEvents","removeEventListener","browse","click","teardown","parentNode","removeChild"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAIAI,EAEA,SAAAI,GAGA,SAAAJ,EAAAK,EAAAC,QACA,IAAAA,IACAA,EAAA,CACAC,aAAA,KAIA,IAAAC,EAAAJ,EAAAK,KAAAC,KAAAL,EAAAC,IAAAI,KAQA,OANAF,EAAAG,aAAA,WACA,IAAAC,EAAA,GAAAC,MAAAJ,KAAAD,EAAAM,cAAAC,OAEAP,EAAAQ,cAAAC,SAAAL,IAGST,EAAA,WAKTK,EAAAM,cAAAI,SAAAC,cAAA,SAEAX,EAAAM,cAAAM,aAAA,eAEAZ,EAAAM,cAAAO,MAAAC,QAAA,OAEAhB,EAAAiB,UACAf,EAAAM,cAAAM,aAAA,eAGAd,EAAAkB,gBACAhB,EAAAM,cAAAM,aAAA,SAAAd,EAAAkB,eAAAC,KAAA,MAKAP,SAAAQ,KAAAC,YAAAnB,EAAAM,eAEAN,EAAAoB,YAEApB,IAxBAA,EAAAM,cAAA,GACAN,GA+CA,OAlEEP,EAAA,UAAiBD,EAAAI,GA6CnBJ,EAAA6B,UAAAD,UAAA,WACAlB,KAAAI,cAAAgB,iBAAA,SAAApB,KAAAC,eAGAX,EAAA6B,UAAAE,aAAA,WACArB,KAAAI,cAAAkB,oBAAA,SAAAtB,KAAAC,eAGAX,EAAA6B,UAAAI,OAAA,WACAvB,KAAAI,cAAAoB,SAGAlC,EAAA6B,UAAAM,SAAA,WACAzB,KAAAqB,eACA,IAAAK,EAAA1B,KAAAI,cAAAsB,WAEAA,GACAA,EAAAC,YAAA3B,KAAAI,gBAIAd,EAnEA,CAoEEE,EAAA","file":"static/js/@atlaskit-internal_media-picker-browser.0e8da60f.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { LocalUploadComponent } from './localUpload';\nimport * as exenv from 'exenv';\n\nvar BrowserImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BrowserImpl, _super);\n\n  function BrowserImpl(context, browserConfig) {\n    if (browserConfig === void 0) {\n      browserConfig = {\n        uploadParams: {}\n      };\n    }\n\n    var _this = _super.call(this, context, browserConfig) || this;\n\n    _this.onFilePicked = function () {\n      var filesArray = [].slice.call(_this.browseElement.files);\n\n      _this.uploadService.addFiles(filesArray);\n    };\n\n    if (!exenv.canUseDOM) {\n      _this.browseElement = {};\n      return _this;\n    }\n\n    _this.browseElement = document.createElement('input');\n\n    _this.browseElement.setAttribute('type', 'file');\n\n    _this.browseElement.style.display = 'none';\n\n    if (browserConfig.multiple) {\n      _this.browseElement.setAttribute('multiple', '');\n    }\n\n    if (browserConfig.fileExtensions) {\n      _this.browseElement.setAttribute('accept', browserConfig.fileExtensions.join(','));\n    } // IE11 hack - click will not execute if input has no parent\n    // WebDriver hack - click will not execute if input isn't in the document\n\n\n    document.body.appendChild(_this.browseElement);\n\n    _this.addEvents();\n\n    return _this;\n  }\n\n  BrowserImpl.prototype.addEvents = function () {\n    this.browseElement.addEventListener('change', this.onFilePicked);\n  };\n\n  BrowserImpl.prototype.removeEvents = function () {\n    this.browseElement.removeEventListener('change', this.onFilePicked);\n  };\n\n  BrowserImpl.prototype.browse = function () {\n    this.browseElement.click();\n  };\n\n  BrowserImpl.prototype.teardown = function () {\n    this.removeEvents();\n    var parentNode = this.browseElement.parentNode;\n\n    if (parentNode) {\n      parentNode.removeChild(this.browseElement);\n    }\n  };\n\n  return BrowserImpl;\n}(LocalUploadComponent);\n\nexport { BrowserImpl };"],"sourceRoot":""}