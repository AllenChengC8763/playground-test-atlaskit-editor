{"version":3,"sources":["../node_modules/@atlaskit/emoji/components/typeahead/styles.js","../node_modules/@atlaskit/emoji/components/common/Scrollable.js","../node_modules/@atlaskit/emoji/components/typeahead/EmojiTypeAheadItem.js","../node_modules/@atlaskit/emoji/components/typeahead/EmojiTypeAheadList.js","../node_modules/@atlaskit/emoji/components/typeahead/EmojiTypeAheadComponent.js","../node_modules/@atlaskit/emoji/util/analytics.js","../node_modules/@atlaskit/emoji/types.js","../node_modules/@atlaskit/emoji/components/common/RecordSelectionDefault.js","../node_modules/@atlaskit/icon/glyph/add.js","../node_modules/@atlaskit/emoji/components/common/EmojiButton.js","../node_modules/@atlaskit/emoji/components/common/ToneSelector.js","../node_modules/@atlaskit/emoji/components/common/EmojiPreview.js"],"names":["styles_a","common_Scrollable","_super","Scrollable","_this","apply","this","arguments","scrollableDiv","reveal","child","forceToTop","childNode","Object","react_dom","scrollableRect","getBoundingClientRect","elementRect","top","scrollTop","bottom","scrollToBottom","scrollHeight","handleScroll","event","firstElement","document","elementFromPoint","left","props","onScroll","handleRef","ref","tslib_es6","prototype","render","_a","children","className","maxHeight","onMouseLeave","scrollableClasses","styles","push","style","react","classnames_default","typeAheadList","lib_es2015","background","border","shared_styles","borderRadius","boxShadow","color","width","typeAheadEmpty","display","typeAheadItem","cursor","listStyleType","overflow","$nest","backgroundColor","typeAheadItemRow","flexDirection","flexWrap","verticalAlign","emojiTypeAheadSpinnerContainer","position","height","paddingTop","toFixed","boxSizing","emojiTypeAheadSpinner","textAlign","typeahead_EmojiTypeAheadItem","EmojiTypeAheadItem","onEmojiSelected","emoji","onSelection","mouse","preventDefault","type_helpers","onEmojiMenuItemMouseMove","onMouseMove","_b","selected","classes","ak-emoji-typeahead-item","onMouseDown","data-emoji-id","shortName","EmojiPreview","wrapIndex","emojis","index","len","length","newIndex","getKey","id","type","getKeyByIndex","typeahead_EmojiTypeAheadList","EmojiTypeAheadList","call","selectNext","state","selectedIndex","selectIndex","selectPrevious","chooseCurrentSelection","selectedEmoji","logger","selectIndexOnHover","emojiId","_emoji","mousePosition","lastMousePosition","selectByEmojiId","itemSelected","handleScrollableRef","scrollable","selectedKey","componentWillReceiveProps","nextProps","i","setState","selectIndexNewEmoji","componentDidUpdate","revealItem","key","item","items","callback","renderItems","map","idx","isSelectedEmoji","_ref","listBody","loading","hasEmoji","ak-emoji-typeahead-list","Spinner","size","defaultProps","isFullShortName","query","charAt","EmojiTypeAheadComponent_uniqueExactShortNameMatchIndex","searchResult","e_1","matchIndex","toLowerCase","_c","next","done","value","undefined","e_1_1","error","return","EmojiTypeAheadComponent_EmojiTypeAheadComponent","EmojiTypeAheadComponent","emojiListRef","count","onSearchResult","result","wasVisible","visible","RecordSelectionDefault","emojiProvider","onSelect","onOpen","onClose","onProviderChange","onEmojiListRef","selectedTone","getSelectedTone","getChildContext","componentDidMount","subscribe","onSearch","componentWillUnmount","unsubscribe","prevEmojiProvider","nextEmojiProvider","options","limit","listLimit","constants","skinTone","replace","sort","types","Default","UsageFrequency","filter","recordUsageOnSelection","childContextTypes","prop_types","__webpack_exports__","__webpack_require__","d","createAndFireEventInElementsChannel","openedPickerEvent","closedPickerEvent","pickerClickedEvent","categoryClickedEvent","pickerSearchedEvent","toneSelectedEvent","toneSelectorOpenedEvent","toneSelectorClosedEvent","uploadBeginButton","uploadConfirmButton","uploadCancelButton","uploadSucceededEvent","uploadFailedEvent","deleteBeginEvent","deleteConfirmEvent","deleteCancelEvent","selectedFileEvent","tslib__WEBPACK_IMPORTED_MODULE_0__","_atlaskit_analytics_next__WEBPACK_IMPORTED_MODULE_1__","_version_json__WEBPACK_IMPORTED_MODULE_2__","createEvent","eventType","action","actionSubject","actionSubjectId","attributes","packageName","packageVersion","emojiPickerEvent","skintoneSelectorEvent","emojiUploaderEvent","SearchSort","createRecordSelectionDefault","provider","recordSelection","defineProperty","exports","default","_react","_interopRequireDefault","_Icon","obj","__esModule","_extends","assign","target","source","hasOwnProperty","AddIcon","createElement","dangerouslySetGlyph","displayName","_default","common_EmojiButton","selectOnHover","onSelected","EmojiButton_handleMouseDown","Emoji","ToneSelector_ToneSelectorInternal","ToneSelectorInternal","onToneSelectedHandler","onToneSelected","fireEvent","analytics","skinToneModifier","createAnalyticsEvent","componentWillMount","toneEmojis","skinVariations","ToneSelector_extractAllTones","tone","common_ToneSelector","withAnalyticsEvents","EmojiPreview_EmojiPreview","selectingTone","onToneButtonClick","toneValue","onToneSelectorCancelled","renderTones","toneEmoji","previewEmoji","renderEmojiPreview","uploadEnabled","previewClasses","previewTextClasses","name","CachingEmoji","renderAddOwnEmoji","onOpenUpload","index_es","i18n","addCustomEmojiLabel","label","Button","onClick","iconBefore","add_default","a","appearance","sectionClasses"],"mappings":"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","file":"static/js/193.803186eb.chunk.js","sourcesContent":["var _a;\n\nimport { style } from 'typestyle';\nimport { emojiPreviewSelectedColor, emojiTypeAheadMaxHeight, emojiTypeAheadWidth, noDialogContainerBorderColor, noDialogContainerBorderRadius, noDialogContainerBoxShadow } from '../../util/shared-styles';\nexport var selected = 'emoji-typeahead-selected';\nexport var emojiTypeAhead = 'emoji-typeahead-element';\nexport var typeAheadListContainer = 'emoji-typeahead-list-container';\nexport var typeAheadList = style({\n  background: 'white',\n  border: \"1px solid \" + noDialogContainerBorderColor,\n  borderRadius: noDialogContainerBorderRadius,\n  boxShadow: noDialogContainerBoxShadow,\n  color: '#333',\n  width: emojiTypeAheadWidth\n});\nexport var typeAheadEmpty = style({\n  display: 'none'\n});\nexport var typeAheadItem = style({\n  cursor: 'pointer',\n  display: 'block',\n  listStyleType: 'none',\n  overflow: 'hidden',\n  width: emojiTypeAheadWidth,\n  $nest: (_a = {}, _a[\"&.\" + selected] = {\n    backgroundColor: emojiPreviewSelectedColor\n  }, _a)\n});\nexport var typeAheadItemRow = style({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  verticalAlign: 'middle'\n});\nexport var emojiTypeAheadSpinnerContainer = style({\n  position: 'relative',\n  height: emojiTypeAheadMaxHeight + \"px\",\n  paddingTop: ((emojiTypeAheadMaxHeight - 30) / 2).toFixed() + \"px\",\n  boxSizing: 'border-box'\n});\nexport var emojiTypeAheadSpinner = style({\n  textAlign: 'center'\n});","// FIXME - FAB-1732 looking at making a shared component for this\nimport * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as styles from './styles';\n\nvar Scrollable =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Scrollable, _super);\n\n  function Scrollable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.scrollableDiv = null; // API\n\n    _this.reveal = function (child, forceToTop) {\n      if (child && _this.scrollableDiv) {\n        var childNode = findDOMNode(child); // Not using Element.scrollIntoView as it scrolls even to top/bottom of view even if\n        // already visible\n\n        var scrollableRect = _this.scrollableDiv.getBoundingClientRect();\n\n        var elementRect = childNode.getBoundingClientRect();\n\n        if (forceToTop || elementRect.top < scrollableRect.top) {\n          _this.scrollableDiv.scrollTop += elementRect.top - scrollableRect.top;\n        } else if (elementRect.bottom > scrollableRect.bottom) {\n          _this.scrollableDiv.scrollTop += elementRect.bottom - scrollableRect.bottom;\n        }\n      }\n    };\n\n    _this.scrollToBottom = function () {\n      if (_this.scrollableDiv) {\n        _this.scrollableDiv.scrollTop = _this.scrollableDiv.scrollHeight;\n      }\n    };\n\n    _this.handleScroll = function (event) {\n      var sampleOffset = 10;\n      var firstElement;\n\n      if (_this.scrollableDiv) {\n        var scrollableRect = _this.scrollableDiv.getBoundingClientRect();\n\n        firstElement = document.elementFromPoint(scrollableRect.left + sampleOffset, scrollableRect.top + sampleOffset);\n      }\n\n      if (_this.props.onScroll && firstElement) {\n        _this.props.onScroll(firstElement, event);\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      _this.scrollableDiv = ref;\n    };\n\n    return _this;\n  }\n\n  Scrollable.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        className = _a.className,\n        maxHeight = _a.maxHeight,\n        onMouseLeave = _a.onMouseLeave;\n    var scrollableClasses = ['emoji-scrollable', styles.emojiScrollable];\n\n    if (className) {\n      scrollableClasses.push(className);\n    }\n\n    var style = maxHeight ? {\n      maxHeight: maxHeight\n    } : {};\n    return React.createElement(\"div\", {\n      className: classNames(scrollableClasses),\n      onMouseLeave: onMouseLeave,\n      onScroll: this.handleScroll,\n      ref: this.handleRef,\n      style: style\n    }, children);\n  };\n\n  return Scrollable;\n}(PureComponent);\n\nexport default Scrollable;","import * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { toEmojiId } from '../../util/type-helpers';\nimport { leftClick } from '../../util/mouse';\nimport EmojiPreview from '../common/EmojiPreview';\nimport * as styles from './styles';\n\nvar EmojiTypeAheadItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiTypeAheadItem, _super);\n\n  function EmojiTypeAheadItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // internal, used for callbacks\n\n\n    _this.onEmojiSelected = function (event) {\n      var _a = _this.props,\n          emoji = _a.emoji,\n          onSelection = _a.onSelection;\n\n      if (leftClick(event) && onSelection) {\n        event.preventDefault();\n        onSelection(toEmojiId(emoji), emoji, event);\n      }\n    };\n\n    _this.onEmojiMenuItemMouseMove = function (event) {\n      var _a = _this.props,\n          emoji = _a.emoji,\n          onMouseMove = _a.onMouseMove;\n\n      if (onMouseMove) {\n        onMouseMove(toEmojiId(emoji), emoji, event);\n      }\n    };\n\n    return _this;\n  }\n\n  EmojiTypeAheadItem.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        selected = _b.selected,\n        emoji = _b.emoji;\n    var classes = classNames((_a = {\n      'ak-emoji-typeahead-item': true\n    }, _a[styles.typeAheadItem] = true, _a[styles.selected] = selected, _a));\n    return React.createElement(\"div\", {\n      className: classes,\n      onMouseDown: this.onEmojiSelected,\n      onMouseMove: this.onEmojiMenuItemMouseMove,\n      \"data-emoji-id\": emoji.shortName\n    }, React.createElement(\"div\", {\n      className: styles.typeAheadItemRow\n    }, React.createElement(EmojiPreview, {\n      emoji: emoji\n    })));\n  };\n\n  return EmojiTypeAheadItem;\n}(PureComponent);\n\nexport default EmojiTypeAheadItem;","import * as tslib_1 from \"tslib\";\nimport Spinner from '@atlaskit/spinner';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { emojiTypeAheadMaxHeight } from '../../util/shared-styles';\nimport { toEmojiId } from '../../util/type-helpers';\nimport debug from '../../util/logger';\nimport { actualMouseMove, mouseLocation } from '../../util/mouse';\nimport Scrollable from '../common/Scrollable';\nimport EmojiItem from './EmojiTypeAheadItem';\nimport * as styles from './styles';\n\nfunction wrapIndex(emojis, index) {\n  var len = emojis.length;\n  var newIndex = index;\n\n  while (newIndex < 0 && len > 0) {\n    newIndex += len;\n  }\n\n  return newIndex % len;\n}\n\nfunction getKey(emoji) {\n  return emoji.id || emoji.shortName + \"-\" + emoji.type;\n}\n\nfunction getKeyByIndex(emojis, index) {\n  var emoji = emojis && emojis[index];\n\n  if (emoji) {\n    return getKey(emoji);\n  }\n\n  return undefined;\n}\n\nvar EmojiTypeAheadList =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiTypeAheadList, _super);\n\n  function EmojiTypeAheadList(props) {\n    var _this = _super.call(this, props) || this; // API\n\n\n    _this.selectNext = function () {\n      var newIndex = wrapIndex(_this.props.emojis, _this.state.selectedIndex + 1);\n\n      _this.selectIndex(newIndex);\n    };\n\n    _this.selectPrevious = function () {\n      var newIndex = wrapIndex(_this.props.emojis, _this.state.selectedIndex - 1);\n\n      _this.selectIndex(newIndex);\n    };\n\n    _this.chooseCurrentSelection = function () {\n      var _a = _this.props,\n          emojis = _a.emojis,\n          onEmojiSelected = _a.onEmojiSelected;\n      var selectedIndex = _this.state.selectedIndex;\n      var selectedEmoji = emojis[selectedIndex];\n      debug('ak-typeahead-list.chooseCurrentSelection', selectedEmoji);\n\n      if (onEmojiSelected) {\n        onEmojiSelected(toEmojiId(selectedEmoji), selectedEmoji);\n      }\n    };\n\n    _this.selectIndexOnHover = function (emojiId, _emoji, event) {\n      // TODO: fix this\n      if (!event) {\n        return;\n      }\n\n      var mousePosition = mouseLocation(event);\n\n      if (actualMouseMove(_this.lastMousePosition, mousePosition)) {\n        _this.selectByEmojiId(emojiId);\n      }\n\n      _this.lastMousePosition = mousePosition;\n    };\n\n    _this.itemSelected = function (emojiId) {\n      _this.selectByEmojiId(emojiId, function () {\n        _this.chooseCurrentSelection();\n      });\n    };\n\n    _this.handleScrollableRef = function (ref) {\n      _this.scrollable = ref;\n    };\n\n    _this.state = {\n      selectedKey: getKeyByIndex(props.emojis, 0),\n      selectedIndex: 0\n    };\n    return _this;\n  }\n\n  EmojiTypeAheadList.prototype.componentWillReceiveProps = function (nextProps) {\n    // adjust selection\n    var emojis = nextProps.emojis;\n    var selectedKey = this.state.selectedKey;\n\n    if (!selectedKey) {\n      // go with default of selecting first item\n      return;\n    }\n\n    for (var i = 0; i < emojis.length; i++) {\n      if (selectedKey === emojis[i].id) {\n        this.setState({\n          selectedIndex: i\n        });\n        return;\n      }\n    } // existing selection not in results, pick first\n\n\n    this.selectIndexNewEmoji(0, emojis);\n  };\n\n  EmojiTypeAheadList.prototype.componentDidUpdate = function () {\n    var emojis = this.props.emojis;\n    var selectedIndex = this.state.selectedIndex;\n\n    if (emojis && emojis[selectedIndex]) {\n      var selectedEmoji = emojis[selectedIndex];\n      this.revealItem(selectedEmoji.id || selectedEmoji.shortName);\n    }\n  }; // Internal\n\n\n  EmojiTypeAheadList.prototype.revealItem = function (key) {\n    var item = this.items[key];\n\n    if (item && this.scrollable) {\n      this.scrollable.reveal(item);\n    }\n  };\n\n  EmojiTypeAheadList.prototype.selectIndexNewEmoji = function (index, emojis) {\n    this.setState({\n      selectedIndex: index,\n      selectedKey: getKeyByIndex(emojis, index)\n    });\n  };\n\n  EmojiTypeAheadList.prototype.selectIndex = function (index, callback) {\n    var emojis = this.props.emojis;\n    this.setState({\n      selectedIndex: index,\n      selectedKey: getKeyByIndex(emojis, index)\n    }, callback);\n  };\n\n  EmojiTypeAheadList.prototype.selectByEmojiId = function (emojiId, callback) {\n    var emojis = this.props.emojis;\n\n    for (var i = 0; i < emojis.length; i++) {\n      var emoji = emojis[i];\n\n      if (emoji.id === emojiId.id) {\n        this.selectIndex(i, callback);\n        return;\n      }\n    }\n\n    for (var i = 0; i < emojis.length; i++) {\n      var emoji = emojis[i];\n\n      if (emoji.shortName === emojiId.shortName) {\n        this.selectIndex(i, callback);\n        return;\n      }\n    }\n  };\n\n  EmojiTypeAheadList.prototype.renderItems = function (emojis) {\n    var _this = this;\n\n    if (emojis && emojis.length) {\n      this.items = {};\n      return React.createElement(\"div\", null, emojis.map(function (emoji, idx) {\n        var key = getKey(emoji);\n        var item = React.createElement(EmojiItem, {\n          emoji: emoji,\n          key: key,\n          selected: _this.isSelectedEmoji(emoji, idx),\n          onMouseMove: _this.selectIndexOnHover,\n          onSelection: _this.itemSelected,\n          ref: function ref(_ref) {\n            if (_ref) {\n              _this.items[key] = _ref;\n            } else {\n              delete _this.items[key];\n            }\n          }\n        });\n        return item;\n      }));\n    }\n\n    return null;\n  };\n\n  EmojiTypeAheadList.prototype.isSelectedEmoji = function (emoji, index) {\n    var selectedKey = this.state.selectedKey;\n    return selectedKey ? selectedKey === emoji.id : index === 0;\n  };\n\n  EmojiTypeAheadList.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        emojis = _b.emojis,\n        loading = _b.loading;\n    var hasEmoji = emojis && emojis.length;\n    var classes = classNames((_a = {\n      'ak-emoji-typeahead-list': true\n    }, _a[styles.typeAheadList] = true, _a[styles.typeAheadEmpty] = !hasEmoji && !loading, _a));\n    var listBody;\n\n    if (loading) {\n      listBody = React.createElement(\"div\", {\n        className: styles.emojiTypeAheadSpinnerContainer\n      }, React.createElement(\"div\", {\n        className: styles.emojiTypeAheadSpinner\n      }, React.createElement(Spinner, {\n        size: \"medium\"\n      })));\n    } else {\n      listBody = this.renderItems(emojis);\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.typeAheadListContainer\n    }, React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(Scrollable, {\n      ref: this.handleScrollableRef,\n      maxHeight: emojiTypeAheadMaxHeight + \"px\"\n    }, listBody)));\n  };\n\n  EmojiTypeAheadList.defaultProps = {\n    onEmojiSelected: function onEmojiSelected() {}\n  };\n  return EmojiTypeAheadList;\n}(PureComponent);\n\nexport default EmojiTypeAheadList;","import * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { defaultListLimit } from '../../util/constants';\nimport { toEmojiId } from '../../util/type-helpers';\nimport { SearchSort } from '../../types';\nimport debug from '../../util/logger';\nimport { createRecordSelectionDefault } from '../common/RecordSelectionDefault';\nimport EmojiList from './EmojiTypeAheadList';\nimport * as styles from './styles';\n\nvar isFullShortName = function isFullShortName(query) {\n  return query && query.length > 1 && query.charAt(0) === ':' && query.charAt(query.length - 1) === ':';\n};\n\nvar uniqueExactShortNameMatchIndex = function uniqueExactShortNameMatchIndex(searchResult, query) {\n  var e_1, _a;\n\n  if (!query) {\n    return undefined;\n  }\n\n  query = query.toLowerCase();\n  var matchIndex;\n  var index = 0;\n\n  try {\n    for (var _b = tslib_1.__values(searchResult.emojis), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var emoji = _c.value;\n\n      if (query && emoji.shortName.toLowerCase() === query) {\n        if (matchIndex === undefined) {\n          matchIndex = index;\n        } else {\n          return;\n        }\n      }\n\n      index++;\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return matchIndex;\n};\n\nvar EmojiTypeAheadComponent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiTypeAheadComponent, _super);\n\n  function EmojiTypeAheadComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.emojiListRef = null;\n\n    _this.selectNext = function () {\n      if (_this.emojiListRef) {\n        _this.emojiListRef.selectNext();\n      }\n    };\n\n    _this.selectPrevious = function () {\n      if (_this.emojiListRef) {\n        _this.emojiListRef.selectPrevious();\n      }\n    };\n\n    _this.chooseCurrentSelection = function () {\n      if (_this.emojiListRef) {\n        _this.emojiListRef.chooseCurrentSelection();\n      }\n    };\n\n    _this.count = function () {\n      var emojis = _this.state.emojis;\n      return emojis && emojis.length || 0;\n    };\n\n    _this.onSearchResult = function (result) {\n      var emojis = result.emojis,\n          query = result.query;\n      var wasVisible = _this.state.visible;\n      var visible = emojis.length > 0;\n      debug('emoji-typeahead.applyPropChanges', emojis.length, wasVisible, visible);\n\n      _this.setState({\n        emojis: emojis,\n        visible: visible,\n        loading: false\n      });\n\n      if (isFullShortName(query)) {\n        var matchIndex = uniqueExactShortNameMatchIndex(result, query);\n\n        if (matchIndex !== undefined) {\n          var onSelect = createRecordSelectionDefault(_this.props.emojiProvider, _this.props.onSelection);\n          onSelect(toEmojiId(result.emojis[matchIndex]), result.emojis[matchIndex]);\n        }\n      }\n\n      if (wasVisible !== visible) {\n        if (visible) {\n          if (_this.props.onOpen) {\n            _this.props.onOpen();\n          }\n        } else {\n          if (_this.props.onClose) {\n            _this.props.onClose();\n          }\n        }\n      }\n    };\n\n    _this.onProviderChange = {\n      result: _this.onSearchResult\n    };\n\n    _this.onEmojiListRef = function (ref) {\n      _this.emojiListRef = ref;\n    };\n\n    _this.state = {\n      visible: true,\n      emojis: [],\n      loading: true,\n      selectedTone: props.emojiProvider.getSelectedTone()\n    };\n\n    if (_this.props.onOpen) {\n      _this.props.onOpen();\n    }\n\n    return _this;\n  }\n\n  EmojiTypeAheadComponent.prototype.getChildContext = function () {\n    return {\n      emoji: {\n        emojiProvider: this.props.emojiProvider\n      }\n    };\n  };\n\n  EmojiTypeAheadComponent.prototype.componentDidMount = function () {\n    var emojiProvider = this.props.emojiProvider;\n    emojiProvider.subscribe(this.onProviderChange);\n    this.onSearch(this.props.query);\n  };\n\n  EmojiTypeAheadComponent.prototype.componentWillUnmount = function () {\n    var emojiProvider = this.props.emojiProvider;\n    emojiProvider.unsubscribe(this.onProviderChange);\n  };\n\n  EmojiTypeAheadComponent.prototype.componentWillReceiveProps = function (nextProps) {\n    var prevEmojiProvider = this.props.emojiProvider;\n    var nextEmojiProvider = nextProps.emojiProvider;\n\n    if (prevEmojiProvider !== nextEmojiProvider) {\n      prevEmojiProvider.unsubscribe(this.onProviderChange);\n      nextEmojiProvider.subscribe(this.onProviderChange);\n      this.onSearch(nextProps.query);\n    } else if (this.props.query !== nextProps.query) {\n      this.onSearch(nextProps.query);\n    }\n  };\n\n  EmojiTypeAheadComponent.prototype.onSearch = function (query) {\n    var _a = this.props,\n        emojiProvider = _a.emojiProvider,\n        listLimit = _a.listLimit;\n    var options = {\n      limit: listLimit || defaultListLimit,\n      skinTone: this.state.selectedTone\n    };\n\n    if (query && query.replace(':', '').length > 0) {\n      options.sort = SearchSort.Default;\n    } else {\n      // if empty query (i.e. typeahead triggered only) then only sort by usage\n      options.sort = SearchSort.UsageFrequency;\n    }\n\n    emojiProvider.filter(query, options);\n  };\n\n  EmojiTypeAheadComponent.prototype.render = function () {\n    var _a = this.props,\n        emojiProvider = _a.emojiProvider,\n        onSelection = _a.onSelection;\n    var recordUsageOnSelection = createRecordSelectionDefault(emojiProvider, onSelection);\n    var _b = this.state,\n        visible = _b.visible,\n        emojis = _b.emojis,\n        loading = _b.loading;\n    var style = {\n      display: visible ? 'block' : 'none'\n    };\n    var classes = classNames(['ak-emoji-typeahead', styles.emojiTypeAhead]);\n    return React.createElement(\"div\", {\n      style: style,\n      className: classes\n    }, React.createElement(EmojiList, {\n      emojis: emojis,\n      onEmojiSelected: recordUsageOnSelection,\n      ref: this.onEmojiListRef,\n      loading: loading\n    }));\n  };\n\n  EmojiTypeAheadComponent.childContextTypes = {\n    emoji: PropTypes.object\n  };\n  EmojiTypeAheadComponent.defaultProps = {\n    onSelection: function onSelection() {},\n    onOpen: function onOpen() {},\n    onClose: function onClose() {},\n    listLimit: defaultListLimit\n  };\n  return EmojiTypeAheadComponent;\n}(PureComponent);\n\nexport default EmojiTypeAheadComponent;","import * as tslib_1 from \"tslib\";\nimport { createAndFireEvent } from '@atlaskit/analytics-next';\nimport { name as packageName, version as packageVersion } from '../version.json';\nexport var createAndFireEventInElementsChannel = createAndFireEvent('fabric-elements');\n\nvar createEvent = function createEvent(eventType, action, actionSubject, actionSubjectId, attributes) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  return {\n    eventType: eventType,\n    action: action,\n    actionSubject: actionSubject,\n    actionSubjectId: actionSubjectId,\n    attributes: tslib_1.__assign({\n      packageName: packageName,\n      packageVersion: packageVersion\n    }, attributes)\n  };\n};\n\nvar emojiPickerEvent = function emojiPickerEvent(action, attributes, actionSubjectId) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  return createEvent('ui', action, 'emojiPicker', actionSubjectId, attributes);\n};\n\nexport var openedPickerEvent = function openedPickerEvent() {\n  return emojiPickerEvent('opened');\n};\nexport var closedPickerEvent = function closedPickerEvent(attributes) {\n  return emojiPickerEvent('closed', attributes);\n};\nexport var pickerClickedEvent = function pickerClickedEvent(attributes) {\n  return emojiPickerEvent('clicked', attributes, 'emoji');\n};\nexport var categoryClickedEvent = function categoryClickedEvent(attributes) {\n  return emojiPickerEvent('clicked', attributes, 'category');\n};\nexport var pickerSearchedEvent = function pickerSearchedEvent(attributes) {\n  return emojiPickerEvent('searched', attributes, 'query');\n};\n\nvar skintoneSelectorEvent = function skintoneSelectorEvent(action, attributes) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  return createEvent('ui', action, 'emojiSkintoneSelector', undefined, attributes);\n};\n\nexport var toneSelectedEvent = function toneSelectedEvent(attributes) {\n  return skintoneSelectorEvent('clicked', attributes);\n};\nexport var toneSelectorOpenedEvent = function toneSelectorOpenedEvent(attributes) {\n  return skintoneSelectorEvent('opened', attributes);\n};\nexport var toneSelectorClosedEvent = function toneSelectorClosedEvent() {\n  return skintoneSelectorEvent('cancelled');\n};\n\nvar emojiUploaderEvent = function emojiUploaderEvent(action, actionSubjectId, attributes) {\n  return createEvent('ui', action, 'emojiUploader', actionSubjectId, attributes);\n};\n\nexport var uploadBeginButton = function uploadBeginButton() {\n  return emojiUploaderEvent('clicked', 'addButton');\n};\nexport var uploadConfirmButton = function uploadConfirmButton(attributes) {\n  return emojiUploaderEvent('clicked', 'confirmButton', attributes);\n};\nexport var uploadCancelButton = function uploadCancelButton() {\n  return emojiUploaderEvent('clicked', 'cancelButton');\n};\nexport var uploadSucceededEvent = function uploadSucceededEvent(attributes) {\n  return createEvent('operational', 'finished', 'emojiUploader', undefined, attributes);\n};\nexport var uploadFailedEvent = function uploadFailedEvent(attributes) {\n  return createEvent('operational', 'failed', 'emojiUploader', undefined, attributes);\n};\nexport var deleteBeginEvent = function deleteBeginEvent(attributes) {\n  return createEvent('ui', 'clicked', 'emojiPicker', 'deleteEmojiTrigger', attributes);\n};\nexport var deleteConfirmEvent = function deleteConfirmEvent(attributes) {\n  return createEvent('ui', 'clicked', 'emojiPicker', 'deleteEmojiConfirm', attributes);\n};\nexport var deleteCancelEvent = function deleteCancelEvent(attributes) {\n  return createEvent('ui', 'clicked', 'emojiPicker', 'deleteEmojiCancel', attributes);\n};\nexport var selectedFileEvent = function selectedFileEvent() {\n  return createEvent('ui', 'clicked', 'emojiUploader', 'selectFile');\n};","export var SearchSort;\n\n(function (SearchSort) {\n  // no sort - just the default ordering of emoji\n  SearchSort[SearchSort[\"None\"] = 0] = \"None\"; // a sort taking into account a number of factors including, usage, closeness of match to the query, etc\n\n  SearchSort[SearchSort[\"Default\"] = 1] = \"Default\"; // sort such that the most frequently used emoji come first, and then standard, service defined ordering is preserved.\n\n  SearchSort[SearchSort[\"UsageFrequency\"] = 2] = \"UsageFrequency\";\n})(SearchSort || (SearchSort = {}));","/**\n * A function that will wrap any configured Emoji 'onSelection' function to ensure recordSelection is always\n * called.\n *\n * @param provider the EmojiProvider which will be called on each emoji selection\n * @param onSelect the onSelect function that is explicitly configured on the Emoji component.\n */\nexport var createRecordSelectionDefault = function createRecordSelectionDefault(provider, onSelect) {\n  return function (emojiId, emoji, event) {\n    try {\n      if (provider.recordSelection && emoji) {\n        provider.recordSelection(emoji);\n      }\n    } finally {\n      if (onSelect) {\n        onSelect(emojiId, emoji, event);\n      }\n    }\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Icon = _interopRequireDefault(require(\"../cjs/components/Icon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AddIcon = function AddIcon(props) {\n  return _react.default.createElement(_Icon.default, _extends({\n    dangerouslySetGlyph: \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" role=\\\"presentation\\\"><path d=\\\"M13 11V3.993A.997.997 0 0 0 12 3c-.556 0-1 .445-1 .993V11H3.993A.997.997 0 0 0 3 12c0 .557.445 1 .993 1H11v7.007c0 .548.448.993 1 .993.556 0 1-.445 1-.993V13h7.007A.997.997 0 0 0 21 12c0-.556-.445-1-.993-1H13z\\\" fill=\\\"currentColor\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n  }, props));\n};\n\nAddIcon.displayName = 'AddIcon';\nvar _default = AddIcon;\nexports.default = _default;","import classNames from 'classnames';\nimport * as React from 'react';\nimport * as styles from './styles';\nimport Emoji from './Emoji';\nimport { leftClick } from '../../util/mouse';\n\nvar handleMouseDown = function handleMouseDown(props, event) {\n  var onSelected = props.onSelected;\n  event.preventDefault();\n\n  if (onSelected && leftClick(event)) {\n    onSelected();\n  }\n};\n\nexport var EmojiButton = function EmojiButton(props) {\n  var emoji = props.emoji,\n      selectOnHover = props.selectOnHover;\n  var classes = [styles.emojiButton];\n  return React.createElement(\"button\", {\n    className: classNames(classes),\n    onMouseDown: function onMouseDown(event) {\n      handleMouseDown(props, event);\n    }\n  }, React.createElement(Emoji, {\n    emoji: emoji,\n    selectOnHover: selectOnHover\n  }));\n};\nexport default EmojiButton;","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport EmojiButton from './EmojiButton';\nimport { withAnalyticsEvents } from '@atlaskit/analytics-next';\nimport { createAndFireEventInElementsChannel, toneSelectedEvent, toneSelectorOpenedEvent } from '../../util/analytics';\n\nvar extractAllTones = function extractAllTones(emoji) {\n  if (emoji.skinVariations) {\n    return tslib_1.__spread([emoji], emoji.skinVariations);\n  }\n\n  return [emoji];\n};\n\nvar ToneSelectorInternal =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ToneSelectorInternal, _super);\n\n  function ToneSelectorInternal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onToneSelectedHandler = function (skinTone) {\n      var onToneSelected = _this.props.onToneSelected;\n      onToneSelected(skinTone);\n      var toneList = ['default', 'light', 'mediumLight', 'medium', 'mediumDark', 'dark'];\n\n      _this.fireEvent(toneSelectedEvent({\n        skinToneModifier: toneList[skinTone]\n      }));\n    };\n\n    return _this;\n  }\n\n  ToneSelectorInternal.prototype.fireEvent = function (event) {\n    var createAnalyticsEvent = this.props.createAnalyticsEvent;\n\n    if (createAnalyticsEvent) {\n      createAndFireEventInElementsChannel(event)(createAnalyticsEvent);\n    }\n  };\n\n  ToneSelectorInternal.prototype.componentWillMount = function () {\n    this.fireEvent(toneSelectorOpenedEvent({}));\n  };\n\n  ToneSelectorInternal.prototype.render = function () {\n    var _this = this;\n\n    var emoji = this.props.emoji;\n    var toneEmojis = extractAllTones(emoji);\n    return React.createElement(\"div\", null, toneEmojis.map(function (tone, i) {\n      return React.createElement(EmojiButton, {\n        key: \"\" + tone.id,\n        onSelected: function onSelected() {\n          return _this.onToneSelectedHandler(i);\n        },\n        emoji: tone,\n        selectOnHover: true\n      });\n    }));\n  };\n\n  return ToneSelectorInternal;\n}(PureComponent);\n\nexport { ToneSelectorInternal };\nvar ToneSelector = withAnalyticsEvents()(ToneSelectorInternal);\nexport default ToneSelector;","import * as tslib_1 from \"tslib\";\nimport AkButton from '@atlaskit/button';\nimport AddIcon from '@atlaskit/icon/glyph/add';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CachingEmoji from '../../components/common/CachingEmoji';\nimport EmojiButton from '../../components/common/EmojiButton';\nimport { messages } from '../i18n';\nimport * as styles from './styles';\nimport ToneSelector from './ToneSelector';\n\nvar EmojiPreview =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EmojiPreview, _super);\n\n  function EmojiPreview() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      selectingTone: false\n    };\n\n    _this.onToneButtonClick = function () {\n      _this.setState({\n        selectingTone: true\n      });\n    };\n\n    _this.onToneSelected = function (toneValue) {\n      _this.setState({\n        selectingTone: false\n      });\n\n      if (_this.props.onToneSelected) {\n        _this.props.onToneSelected(toneValue);\n      }\n    };\n\n    _this.onMouseLeave = function () {\n      var selectingTone = _this.state.selectingTone;\n      var onToneSelectorCancelled = _this.props.onToneSelectorCancelled;\n\n      if (selectingTone && onToneSelectorCancelled) {\n        onToneSelectorCancelled();\n      }\n\n      _this.setState({\n        selectingTone: false\n      });\n    };\n\n    return _this;\n  }\n\n  EmojiPreview.prototype.renderTones = function () {\n    var _this = this;\n\n    var _a = this.props,\n        toneEmoji = _a.toneEmoji,\n        selectedTone = _a.selectedTone;\n\n    if (!toneEmoji) {\n      return null;\n    }\n\n    if (this.state.selectingTone) {\n      return React.createElement(\"div\", {\n        className: styles.toneSelectorContainer\n      }, React.createElement(ToneSelector, {\n        emoji: toneEmoji,\n        onToneSelected: this.onToneSelected\n      }));\n    }\n\n    var previewEmoji = toneEmoji;\n\n    if (selectedTone && previewEmoji.skinVariations) {\n      previewEmoji = previewEmoji.skinVariations[(selectedTone || 1) - 1];\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.buttons\n    }, React.createElement(EmojiButton, {\n      emoji: previewEmoji,\n      onSelected: function onSelected() {\n        return _this.onToneButtonClick();\n      },\n      selectOnHover: true\n    }));\n  };\n\n  EmojiPreview.prototype.renderEmojiPreview = function () {\n    var _a, _b;\n\n    var selectingTone = this.state.selectingTone;\n    var _c = this.props,\n        emoji = _c.emoji,\n        uploadEnabled = _c.uploadEnabled;\n\n    if (!emoji || selectingTone || uploadEnabled) {\n      return null;\n    }\n\n    var previewClasses = classNames((_a = {}, _a[styles.preview] = true, _a[styles.withToneSelector] = !!this.props.toneEmoji, _a));\n    var previewTextClasses = classNames((_b = {}, _b[styles.previewText] = true, _b[styles.previewSingleLine] = !emoji.name, _b));\n    return React.createElement(\"div\", {\n      className: previewClasses\n    }, React.createElement(\"span\", {\n      className: styles.previewImg\n    }, React.createElement(CachingEmoji, {\n      emoji: emoji\n    })), React.createElement(\"div\", {\n      className: previewTextClasses\n    }, React.createElement(\"span\", {\n      className: styles.name\n    }, emoji.name), React.createElement(\"span\", {\n      className: styles.shortName\n    }, emoji.shortName)));\n  }; // note: emoji-picker-add-emoji className is used by pollinator synthetic checks\n\n\n  EmojiPreview.prototype.renderAddOwnEmoji = function () {\n    var _a = this.props,\n        onOpenUpload = _a.onOpenUpload,\n        uploadEnabled = _a.uploadEnabled;\n    var selectingTone = this.state.selectingTone;\n\n    if (!uploadEnabled || selectingTone) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.AddCustomEmoji\n    }, React.createElement(FormattedMessage, tslib_1.__assign({}, messages.addCustomEmojiLabel), function (label) {\n      return React.createElement(AkButton, {\n        onClick: onOpenUpload,\n        iconBefore: React.createElement(AddIcon, {\n          label: label,\n          size: \"small\"\n        }),\n        appearance: \"subtle\",\n        className: styles.addCustomEmojiButton + ' emoji-picker-add-emoji'\n      }, label);\n    }));\n  };\n\n  EmojiPreview.prototype.render = function () {\n    var sectionClasses = classNames([styles.emojiPreview, styles.emojiPreviewSection]);\n    return React.createElement(\"div\", {\n      className: sectionClasses,\n      onMouseLeave: this.onMouseLeave\n    }, this.renderAddOwnEmoji(), this.renderEmojiPreview(), this.renderTones());\n  };\n\n  return EmojiPreview;\n}(PureComponent);\n\nexport default EmojiPreview;"],"sourceRoot":""}